<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1stream_1_1TcpCore" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::stream::TcpCore</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1stream_1_1Master" prot="public" virt="non-virtual">rogue::interfaces::stream::Master</basecompoundref>
    <basecompoundref refid="classrogue_1_1interfaces_1_1stream_1_1Slave" prot="public" virt="non-virtual">rogue::interfaces::stream::Slave</basecompoundref>
    <derivedcompoundref refid="classrogue_1_1interfaces_1_1stream_1_1TcpClient" prot="public" virt="non-virtual">rogue::interfaces::stream::TcpClient</derivedcompoundref>
    <derivedcompoundref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" prot="public" virt="non-virtual">rogue::interfaces::stream::TcpServer</derivedcompoundref>
    <includes refid="TcpCore_8h" local="no">TcpCore.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a289f9a1d6a24874b6a8a6203d4bdb929" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::stream::TcpCore::pullAddr_</definition>
        <argsstring></argsstring>
        <name>pullAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="52" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ab083f5abf65daaa26b6fc511e68bc5d1" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::stream::TcpCore::pushAddr_</definition>
        <argsstring></argsstring>
        <name>pushAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="55" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aa990bd53656337bcd942e32412da5d80" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rogue::interfaces::stream::TcpCore::zmqCtx_</definition>
        <argsstring></argsstring>
        <name>zmqCtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="58" column="22" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ad57f897d469e88b3c2c20ee4f834d2cf" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rogue::interfaces::stream::TcpCore::zmqPull_</definition>
        <argsstring></argsstring>
        <name>zmqPull_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="61" column="22" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1af7e77441ab738fda309c3e05ec952511" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rogue::interfaces::stream::TcpCore::zmqPush_</definition>
        <argsstring></argsstring>
        <name>zmqPush_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="64" column="22" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a3c4468013134ae6f15f6b6e1e8b7e1d0" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1Logging" kindref="compound">rogue::Logging</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::Logging&gt; rogue::interfaces::stream::TcpCore::bridgeLog_</definition>
        <argsstring></argsstring>
        <name>bridgeLog_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="70" column="32" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a561760a5fadc6285ca9ec4d59d66a22b" prot="protected" static="no" mutable="no">
        <type>std::thread *</type>
        <definition>std::thread* rogue::interfaces::stream::TcpCore::thread_</definition>
        <argsstring></argsstring>
        <name>thread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="73" column="29" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aaaf2c0ba3ce0f99eb3e601ac1dfce3b6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::stream::TcpCore::threadEn_</definition>
        <argsstring></argsstring>
        <name>threadEn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="74" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1afe3003e49a8edd54a9d4a5e70ba3a483" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rogue::interfaces::stream::TcpCore::bridgeMtx_</definition>
        <argsstring></argsstring>
        <name>bridgeMtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="77" column="27" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a7e32699ee1897f215918bc2338d7eee5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::stream::TcpCore::runThread</definition>
        <argsstring>()</argsstring>
        <name>runThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="67" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a4c31657d16580725f4ec0000909e9d14" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore" kindref="compound">rogue::interfaces::stream::TcpCore</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::interfaces::stream::TcpCore&gt; rogue::interfaces::stream::TcpCore::create</definition>
        <argsstring>(std::string addr, uint16_t port, bool server)</argsstring>
        <name>create</name>
        <param>
          <type>std::string</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>server</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore" kindref="compound">TcpCore</ref> object and return as a TcpCorePtr. </para>
        </briefdescription>
        <detaileddescription>
<para>The creator takes an address, port and server mode flag. The passed address can either be an IP address or hostname. When running in server mode the address string defines which network interface the socket server will listen on. A string of &quot;*&quot; results in all network interfaces being listened on. The stream bridge requires two TCP ports. The passed port is the base number of these two ports. A passed value of 8000 will result in both 8000 and 8001 being used by this bridge.</para>
<para>Not exposed to Python <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Interface address for server, remote server address for client. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Base port number of use for connection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>Server flag. Set to True to run in server mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore" kindref="compound">TcpCore</ref> object as a TcpCorePtr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="97" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aaae8e2ea22a555813919872009af17ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::stream::TcpCore::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="100" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a78f4c472b29c40554cb696e8520f0aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::stream::TcpCore::TcpCore</definition>
        <argsstring>(std::string addr, uint16_t port, bool server)</argsstring>
        <name>TcpCore</name>
        <param>
          <type>std::string</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>server</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="103" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ac01385174662946a7ee5af18614e1fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::stream::TcpCore::~TcpCore</definition>
        <argsstring>()</argsstring>
        <name>~TcpCore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="106" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a13b021a080fbfed8c5172c48eabd1969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::stream::TcpCore::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="109" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ac072dda120b0e860fbb456591b6bf8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rogue::interfaces::stream::TcpCore::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <reimplements refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a212216679fa253e58bda52b621a66dd5">stop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="112" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ab2d12bc359841fab8247229b3231fc89" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rogue::interfaces::stream::TcpCore::acceptFrame</definition>
        <argsstring>(std::shared_ptr&lt; rogue::interfaces::stream::Frame &gt; frame)</argsstring>
        <name>acceptFrame</name>
        <reimplements refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a5b43e4e21f870ab00542bcdf20c9eed6">acceptFrame</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1stream_1_1Frame" kindref="compound">rogue::interfaces::stream::Frame</ref> &gt;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="115" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stream TCP Bridge Core. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the core functionality of the <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpClient" kindref="compound">TcpClient</ref> and <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">TcpServer</ref> classes which implement a Rogue stream bridge over a TCP network. This core can operation in either client or server mode. The <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpClient" kindref="compound">TcpClient</ref> and <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">TcpServer</ref> classes are thin wrapper which define which mode flag to pass to this base class.</para>
<para>The <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">TcpServer</ref> and <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpClient" kindref="compound">TcpClient</ref> interfaces are blocking and will stall frame transmissions when the remote side is either not present or is back pressuring. When the remote server is not present a local buffer is not utilized, where it is utilized when a connection has been established. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Master &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rogue::interfaces::stream::Pool</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Pool"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>rogue::interfaces::stream::TcpServer</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rogue::interfaces::stream::Master</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Master"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Pool &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="1">
        <label>rogue::interfaces::stream::TcpCore</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>rogue::interfaces::stream::TcpClient</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpClient"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>rogue::interfaces::stream::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Slave"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Master &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rogue::interfaces::stream::Pool</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Pool"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="15">
        <label>std::thread</label>
      </node>
      <node id="10">
        <label>std::mutex</label>
      </node>
      <node id="13">
        <label>std::shared_ptr&lt; rogue::Logging &gt;</label>
        <childnode refid="14" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>rogue::interfaces::stream::Master</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Master"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>rogue::Logging</label>
        <link refid="classrogue_1_1Logging"/>
      </node>
      <node id="8">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Pool &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="1">
        <label>rogue::interfaces::stream::TcpCore</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>bridgeMtx_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>pushAddr_</edgelabel>
          <edgelabel>pullAddr_</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>bridgeLog_</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>thread_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>std::string</label>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>rogue::interfaces::stream::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Slave"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" line="47" column="65" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpCore.h" bodystart="46" bodyend="116"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ab2d12bc359841fab8247229b3231fc89" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>acceptFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a9fa25c92683134631260373d985fe6ff" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>acceptReq</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a4454d19c72c99a76b8b446fb6afa72e2" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>addSlave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a1929439ba9e528d232da795fc773f6f5" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>allocBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a3c4468013134ae6f15f6b6e1e8b7e1d0" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>bridgeLog_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1afe3003e49a8edd54a9d4a5e70ba3a483" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>bridgeMtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a13b021a080fbfed8c5172c48eabd1969" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>close</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a4c31657d16580725f4ec0000909e9d14" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1af0ad7b7652bfeb6c1bbef7062245c1ec" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Master::"><scope>rogue::interfaces::stream::TcpCore</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a6cf859e90fb443f756bd49f86759cc08" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::"><scope>rogue::interfaces::stream::TcpCore</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a6244eb8d4f0d4e69a8539f3d889ed004" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>createBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a01e306fd690bbfcfaec95fd90326564f" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>decCounter</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a80fb7808644726ddca72e8e196477229" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>ensureSingleBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a913f40b8d390d1b2f26fa0aecfea34eb" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>equalsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a694f6e2bafd0e1bde90027c158685f72" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>getAllocBytes</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a843fe5351d94a90fe8ef1aa792799a21" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>getAllocCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a83a0b347fcb2524362e0c65f8f9d916c" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>getByteCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a2254a049f7825fbc82a2093c18820a3a" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>getFixedSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a504c34d1b91a6358b3eaf7ee6be4417f" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>getFrameCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a73c526e6d724d2d69393cbe77db353bf" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>getPoolSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a9b665aa11a8dbc6de5fc6e3cfe5fab8a" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>lshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1af6f5b686d275b5545ac7feefceab8dd3" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1addf9a4a5d1f7d1d8026ca3ef60dd46e5" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a76dbb1a62ce29ae6d130e11714a37f2f" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>operator==</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a3c410af1f0beab25864711c1be54b336" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>operator&gt;&gt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1ac099f47e3db8287ec15628c726aad19c" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>Pool</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a289f9a1d6a24874b6a8a6203d4bdb929" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>pullAddr_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ab083f5abf65daaa26b6fc511e68bc5d1" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>pushAddr_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a7565399ec765e1093a349de8745a5034" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>reqFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a9aa628b56ba13631eca0e7cef44c9d80" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>retBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a98f9088c1a19f7875001c8f782df0265" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>rshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a7e32699ee1897f215918bc2338d7eee5" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>runThread</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1ac4270a45820c4c03dd7f2b472df4efd8" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>sendFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a0db1eae3e974be56cfe5cd35653d752d" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>setDebug</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a1180466e6f42279a8c9adb9c689711cd" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>setFixedSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a4fc6d967cadc1799712e7fe7d56878f5" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>setPoolSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aaae8e2ea22a555813919872009af17ee" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::"><scope>rogue::interfaces::stream::TcpCore</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::rogue::"><scope>rogue::interfaces::stream::TcpCore</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;::"><scope>rogue::interfaces::stream::TcpCore</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a3ccdf29d62da59bcc00ab7d4f5ca95aa" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a69faa639115fd3108de75da01b802720" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>slaveCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ac072dda120b0e860fbb456591b6bf8ce" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>stop</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a78f4c472b29c40554cb696e8520f0aa2" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>TcpCore</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a561760a5fadc6285ca9ec4d59d66a22b" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>thread_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aaaf2c0ba3ce0f99eb3e601ac1dfce3b6" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>threadEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aa990bd53656337bcd942e32412da5d80" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>zmqCtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ad57f897d469e88b3c2c20ee4f834d2cf" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>zmqPull_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1af7e77441ab738fda309c3e05ec952511" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>zmqPush_</name></member>
      <member refid="classrogue_1_1EnableSharedFromThisBase_1a30602a01922086d80c07a8099278b41a" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>~EnableSharedFromThisBase</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1af391073d7d1e1125e9563991de0b0991" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>~Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1aa3335da5e11c507b423f0dc73ccbded1" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>~Pool</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a0bc74622985b7f32ea53175995643001" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>~Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ac01385174662946a7ee5af18614e1fd8" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpCore</scope><name>~TcpCore</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
