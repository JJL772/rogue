<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel" kind="class" language="C++" prot="public">
    <compoundname>rogue::utilities::fileio::StreamWriterChannel</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1stream_1_1Slave" prot="public" virt="non-virtual">rogue::interfaces::stream::Slave</basecompoundref>
    <includes refid="StreamWriterChannel_8h" local="no">StreamWriterChannel.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a2555ff218a6325c6b1ed77b41eb71fb8" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriter" kindref="compound">rogue::utilities::fileio::StreamWriter</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::utilities::fileio::StreamWriter&gt; rogue::utilities::fileio::StreamWriterChannel::writer_</definition>
        <argsstring></argsstring>
        <name>writer_</name>
        <briefdescription>
<para>Associated Stream Writer class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="36" column="32" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1ad36dfa28401421cf9039a4e34556e157" prot="private" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t rogue::utilities::fileio::StreamWriterChannel::channel_</definition>
        <argsstring></argsstring>
        <name>channel_</name>
        <briefdescription>
<para>Channel information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="39" column="24" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a3a3573ed40e0295a8cbdca359b26a20f" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::utilities::fileio::StreamWriterChannel::frameCount_</definition>
        <argsstring></argsstring>
        <name>frameCount_</name>
        <briefdescription>
<para>Number of frames received by channel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="42" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a105100e4ed40603c67f91f3881f46b23" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rogue::utilities::fileio::StreamWriterChannel::mtx_</definition>
        <argsstring></argsstring>
        <name>mtx_</name>
        <briefdescription>
<para>Lock for frameCount_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="45" column="27" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1aabf1a2986d788c074341b804a4bd2da2" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable rogue::utilities::fileio::StreamWriterChannel::cond_</definition>
        <argsstring></argsstring>
        <name>cond_</name>
        <briefdescription>
<para>Condition variable for frameCount_ updates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="48" column="40" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a45c52858a7e2a81deb1b7344b04b4825" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel" kindref="compound">rogue::utilities::fileio::StreamWriterChannel</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::utilities::fileio::StreamWriterChannel&gt; rogue::utilities::fileio::StreamWriterChannel::create</definition>
        <argsstring>(std::shared_ptr&lt; rogue::utilities::fileio::StreamWriter &gt; writer, uint8_t channel)</argsstring>
        <name>create</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriter" kindref="compound">rogue::utilities::fileio::StreamWriter</ref> &gt;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Class creation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="54" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a91a6350110c80d1898cacde85a6660b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::utilities::fileio::StreamWriterChannel::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
<para>Setup class in python. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="57" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a82e88ff462d5688501545cbc6abfbe26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::utilities::fileio::StreamWriterChannel::StreamWriterChannel</definition>
        <argsstring>(std::shared_ptr&lt; rogue::utilities::fileio::StreamWriter &gt; writer, uint8_t channel)</argsstring>
        <name>StreamWriterChannel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriter" kindref="compound">rogue::utilities::fileio::StreamWriter</ref> &gt;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel</declname>
        </param>
        <briefdescription>
<para>Creator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="60" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a0776b4148d31e0be409e52c365cc49e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::utilities::fileio::StreamWriterChannel::~StreamWriterChannel</definition>
        <argsstring>()</argsstring>
        <name>~StreamWriterChannel</name>
        <briefdescription>
<para>Deconstructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="63" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a160ea6df0c5d9a27a02df59d8aed67b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rogue::utilities::fileio::StreamWriterChannel::acceptFrame</definition>
        <argsstring>(std::shared_ptr&lt; rogue::interfaces::stream::Frame &gt; frame)</argsstring>
        <name>acceptFrame</name>
        <reimplements refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a5b43e4e21f870ab00542bcdf20c9eed6">acceptFrame</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1stream_1_1Frame" kindref="compound">rogue::interfaces::stream::Frame</ref> &gt;</type>
          <declname>frame</declname>
        </param>
        <briefdescription>
<para>Accept a frame from master. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="66" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a266b7cb7c62860c1c50568d69d5f8cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::utilities::fileio::StreamWriterChannel::getFrameCount</definition>
        <argsstring>()</argsstring>
        <name>getFrameCount</name>
        <briefdescription>
<para>Get number of frames that have been accepted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="69" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a1908e5583529dde2a069a1ce2795a991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::utilities::fileio::StreamWriterChannel::setFrameCount</definition>
        <argsstring>(uint32_t count)</argsstring>
        <name>setFrameCount</name>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Set the frame count to a specific value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="72" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1abcb8a54011c08bedb929a05c4b939c89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::utilities::fileio::StreamWriterChannel::waitFrameCount</definition>
        <argsstring>(uint32_t count, uint64_t timeout)</argsstring>
        <name>waitFrameCount</name>
        <param>
          <type>uint32_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
<para>Block until a number of frames have been received. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="75" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stream writer central class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::interfaces::stream::Pool</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Pool"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rogue::utilities::fileio::StreamWriterChannel</label>
        <link refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Pool &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::stream::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Slave"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::interfaces::stream::Pool</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Pool"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rogue::utilities::fileio::StreamWriterChannel</label>
        <link refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Pool &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::stream::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Slave"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" line="33" column="75" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/utilities/fileio/StreamWriterChannel.h" bodystart="33" bodyend="76"/>
    <listofallmembers>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a160ea6df0c5d9a27a02df59d8aed67b3" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>acceptFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a9fa25c92683134631260373d985fe6ff" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>acceptReq</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a1929439ba9e528d232da795fc773f6f5" prot="protected" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>allocBuffer</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1ad36dfa28401421cf9039a4e34556e157" prot="private" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>channel_</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1aabf1a2986d788c074341b804a4bd2da2" prot="private" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>cond_</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a45c52858a7e2a81deb1b7344b04b4825" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a6cf859e90fb443f756bd49f86759cc08" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a6244eb8d4f0d4e69a8539f3d889ed004" prot="protected" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>createBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a01e306fd690bbfcfaec95fd90326564f" prot="protected" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>decCounter</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a3a3573ed40e0295a8cbdca359b26a20f" prot="private" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>frameCount_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a694f6e2bafd0e1bde90027c158685f72" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>getAllocBytes</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a843fe5351d94a90fe8ef1aa792799a21" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>getAllocCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a83a0b347fcb2524362e0c65f8f9d916c" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>getByteCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a2254a049f7825fbc82a2093c18820a3a" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>getFixedSize</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a266b7cb7c62860c1c50568d69d5f8cf4" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>getFrameCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a73c526e6d724d2d69393cbe77db353bf" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>getPoolSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a9b665aa11a8dbc6de5fc6e3cfe5fab8a" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>lshiftPy</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a105100e4ed40603c67f91f3881f46b23" prot="private" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>mtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1addf9a4a5d1f7d1d8026ca3ef60dd46e5" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1ac099f47e3db8287ec15628c726aad19c" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>Pool</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a9aa628b56ba13631eca0e7cef44c9d80" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>retBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a0db1eae3e974be56cfe5cd35653d752d" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>setDebug</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a1180466e6f42279a8c9adb9c689711cd" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>setFixedSize</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a1908e5583529dde2a069a1ce2795a991" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>setFrameCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a4fc6d967cadc1799712e7fe7d56878f5" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>setPoolSize</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a91a6350110c80d1898cacde85a6660b2" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;::"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a3ccdf29d62da59bcc00ab7d4f5ca95aa" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a37bfa28fd4bf663259b4be634302334c" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>stop</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a82e88ff462d5688501545cbc6abfbe26" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>StreamWriterChannel</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1abcb8a54011c08bedb929a05c4b939c89" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>waitFrameCount</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a2555ff218a6325c6b1ed77b41eb71fb8" prot="private" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>writer_</name></member>
      <member refid="classrogue_1_1EnableSharedFromThisBase_1a30602a01922086d80c07a8099278b41a" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>~EnableSharedFromThisBase</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1aa3335da5e11c507b423f0dc73ccbded1" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>~Pool</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a0bc74622985b7f32ea53175995643001" prot="public" virt="virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>~Slave</name></member>
      <member refid="classrogue_1_1utilities_1_1fileio_1_1StreamWriterChannel_1a0776b4148d31e0be409e52c365cc49e6" prot="public" virt="non-virtual"><scope>rogue::utilities::fileio::StreamWriterChannel</scope><name>~StreamWriterChannel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
