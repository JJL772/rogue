<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1LibraryBase" kind="class" language="C++" prot="public">
    <compoundname>rogue::LibraryBase</compoundname>
    <includes refid="LibraryBase_8h" local="no">LibraryBase.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrogue_1_1LibraryBase_1a308ef5e88a5fef9bc6d8c6d4b7f8499e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1Logging" kindref="compound">rogue::Logging</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::Logging&gt; rogue::LibraryBase::log_</definition>
        <argsstring></argsstring>
        <name>log_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="42" column="26" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1LibraryBase_1a5b40a69ccecc9ef31fe133b4ccf7c18f" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::shared_ptr&lt;rogue::interfaces::memory::Variable&gt; &gt; rogue::LibraryBase::variables_</definition>
        <argsstring></argsstring>
        <name>variables_</name>
        <briefdescription>
<para>Map of variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="45" column="19" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1LibraryBase_1a2c5573e5e60176b863fb9cc3e62ac61f" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">rogue::interfaces::memory::Block</ref> &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::shared_ptr&lt;rogue::interfaces::memory::Block&gt; &gt; rogue::LibraryBase::blocks_</definition>
        <argsstring></argsstring>
        <name>blocks_</name>
        <briefdescription>
<para>Map of blocks by block name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="48" column="19" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1LibraryBase_1a07ba2af640e31bab2b9adde56da03240" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" kindref="compound">rogue::interfaces::memory::Slave</ref> &gt; &gt;</type>
        <definition>std::map&lt; std::string, std::shared_ptr&lt;rogue::interfaces::memory::Slave&gt; &gt; rogue::LibraryBase::memSlaves_</definition>
        <argsstring></argsstring>
        <name>memSlaves_</name>
        <briefdescription>
<para>Map of memory interfaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="51" column="19" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1LibraryBase_1af2de309b79ab8f08fde5882bb43eeeab" prot="private" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt; std::string &gt; rogue::LibraryBase::memSlavesMissing_</definition>
        <argsstring></argsstring>
        <name>memSlavesMissing_</name>
        <briefdescription>
<para>Map of missing memory interfaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="54" column="19" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a0cd39b5f070d2a6d91724c922e9d9661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::LibraryBase::LibraryBase</definition>
        <argsstring>()</argsstring>
        <name>LibraryBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="58" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a15575f86c56e38123c4ab0b73b3cb686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::LibraryBase::~LibraryBase</definition>
        <argsstring>()</argsstring>
        <name>~LibraryBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="59" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1aacf6df347b44a1cfa02d6049e69a07cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::addMemory</definition>
        <argsstring>(std::string name, std::shared_ptr&lt; rogue::interfaces::memory::Slave &gt; slave)</argsstring>
        <name>addMemory</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" kindref="compound">rogue::interfaces::memory::Slave</ref> &gt;</type>
          <declname>slave</declname>
        </param>
        <briefdescription>
<para>Add slave memory interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="62" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1ab06673b0f48de54c7f80f546bf0d0746" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::parseMemMap</definition>
        <argsstring>(std::string map)</argsstring>
        <name>parseMemMap</name>
        <param>
          <type>std::string</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="65" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1ae8b78b429420f666f3836404cd80ca09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::parseMemMap</definition>
        <argsstring>(const char *filePath, char delim=&apos;\n&apos;)</argsstring>
        <name>parseMemMap</name>
        <param>
          <type>const char *</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
          <defval>&apos;\n&apos;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="66" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1abcc8579b2d72071dfb63a1211241aee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::parseMemMap</definition>
        <argsstring>(std::istream &amp;fStream, char delim)</argsstring>
        <name>parseMemMap</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>fStream</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="67" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1ae0530ccda9fde161b408708e99527192" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::readAll</definition>
        <argsstring>()</argsstring>
        <name>readAll</name>
        <briefdescription>
<para>Read all variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="72" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1aab63b7129d1dc421a3f9c77f32f93fe9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::interfaces::memory::Variable&gt; rogue::LibraryBase::getVariable</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getVariable</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get variable by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="75" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1aa3a44ad56b229ecec5e5ae406cf2f68e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; std::string, std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt; &gt; &amp;</type>
        <definition>const std::map&lt;std::string, std::shared_ptr&lt;rogue::interfaces::memory::Variable&gt; &gt;&amp; rogue::LibraryBase::getVariableList</definition>
        <argsstring>()</argsstring>
        <name>getVariableList</name>
        <briefdescription>
<para>Get a const reference to the map of variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="78" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a1dbcbf2f9d73d595fd70bf9df25c47f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">rogue::interfaces::memory::Block</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::interfaces::memory::Block&gt; rogue::LibraryBase::getBlock</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>getBlock</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get block by name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="81" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a8e2421d5a68ed60fee4143af269cedc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; std::string, std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">rogue::interfaces::memory::Block</ref> &gt; &gt;</type>
        <definition>const std::map&lt; std::string, std::shared_ptr&lt;rogue::interfaces::memory::Block&gt; &gt; rogue::LibraryBase::getBlockList</definition>
        <argsstring>()</argsstring>
        <name>getBlockList</name>
        <briefdescription>
<para>Get a map of blocks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="84" column="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a40ee7443fdc8ee092bd2fbe734528306" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1LibraryBase" kindref="compound">rogue::LibraryBase</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::LibraryBase&gt; rogue::LibraryBase::create</definition>
        <argsstring>()</argsstring>
        <name>create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="69" column="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a7d1b752b479f591d3efa3918fdd20384" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::createVariable</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; &amp;data, std::map&lt; std::string, std::vector&lt; std::shared_ptr&lt; rogue::interfaces::memory::Variable &gt; &gt; &gt; &amp;blockVars)</argsstring>
        <name>createVariable</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>std::map&lt; std::string, std::vector&lt; std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt; &gt; &gt; &amp;</type>
          <declname>blockVars</declname>
        </param>
        <briefdescription>
<para>Create a variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="89" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a15bde4a62ca4bf4f2929ba7abe311315" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rogue::LibraryBase::getFieldString</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; fields, std::string name)</argsstring>
        <name>getFieldString</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Helper function to get string from fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="93" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a4f395909f7fc43698c5408825f9daf28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::LibraryBase::getFieldUInt64</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; fields, std::string name)</argsstring>
        <name>getFieldUInt64</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Helper function to get uint64_t from fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="96" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a3b6e4ca8dad85753501cf6bc12e29396" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::LibraryBase::getFieldUInt32</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; fields, std::string name, bool def=false)</argsstring>
        <name>getFieldUInt32</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>def</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Helper function to get uint32_t from fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="99" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1abf272982867b2240c752e5f6aeb04fbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::LibraryBase::getFieldBool</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; fields, std::string name)</argsstring>
        <name>getFieldBool</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Helper function to get bool from fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="102" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1ab9bbe547ce95cf8237e79c5c375ee11a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rogue::LibraryBase::getFieldDouble</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; fields, std::string name)</argsstring>
        <name>getFieldDouble</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Helper function to get double from fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="105" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1a9fb1010fad5631322ecec86c02efa5a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; uint32_t &gt;</type>
        <definition>std::vector&lt;uint32_t&gt; rogue::LibraryBase::getFieldVectorUInt32</definition>
        <argsstring>(std::map&lt; std::string, std::string &gt; fields, std::string name)</argsstring>
        <name>getFieldVectorUInt32</name>
        <param>
          <type>std::map&lt; std::string, std::string &gt;</type>
          <declname>fields</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Helper function to get uint32_t vector from fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="108" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1LibraryBase_1aa91b39636e4cf3c6078c429a0036ad97" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::LibraryBase::dumpRegisterStatus</definition>
        <argsstring>(std::string filename, bool read, bool includeStatus=false)</argsstring>
        <name>dumpRegisterStatus</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>read</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeStatus</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Dump the current state of the registers in the system. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="111" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classrogue_1_1LibraryBase" kindref="compound">LibraryBase</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" line="39" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/LibraryBase.h" bodystart="39" bodyend="113"/>
    <listofallmembers>
      <member refid="classrogue_1_1LibraryBase_1aacf6df347b44a1cfa02d6049e69a07cd" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>addMemory</name></member>
      <member refid="classrogue_1_1LibraryBase_1a2c5573e5e60176b863fb9cc3e62ac61f" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>blocks_</name></member>
      <member refid="classrogue_1_1LibraryBase_1a40ee7443fdc8ee092bd2fbe734528306" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>create</name></member>
      <member refid="classrogue_1_1LibraryBase_1a7d1b752b479f591d3efa3918fdd20384" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>createVariable</name></member>
      <member refid="classrogue_1_1LibraryBase_1aa91b39636e4cf3c6078c429a0036ad97" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>dumpRegisterStatus</name></member>
      <member refid="classrogue_1_1LibraryBase_1a1dbcbf2f9d73d595fd70bf9df25c47f4" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getBlock</name></member>
      <member refid="classrogue_1_1LibraryBase_1a8e2421d5a68ed60fee4143af269cedc4" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getBlockList</name></member>
      <member refid="classrogue_1_1LibraryBase_1abf272982867b2240c752e5f6aeb04fbe" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getFieldBool</name></member>
      <member refid="classrogue_1_1LibraryBase_1ab9bbe547ce95cf8237e79c5c375ee11a" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getFieldDouble</name></member>
      <member refid="classrogue_1_1LibraryBase_1a15bde4a62ca4bf4f2929ba7abe311315" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getFieldString</name></member>
      <member refid="classrogue_1_1LibraryBase_1a3b6e4ca8dad85753501cf6bc12e29396" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getFieldUInt32</name></member>
      <member refid="classrogue_1_1LibraryBase_1a4f395909f7fc43698c5408825f9daf28" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getFieldUInt64</name></member>
      <member refid="classrogue_1_1LibraryBase_1a9fb1010fad5631322ecec86c02efa5a0" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getFieldVectorUInt32</name></member>
      <member refid="classrogue_1_1LibraryBase_1aab63b7129d1dc421a3f9c77f32f93fe9" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getVariable</name></member>
      <member refid="classrogue_1_1LibraryBase_1aa3a44ad56b229ecec5e5ae406cf2f68e" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>getVariableList</name></member>
      <member refid="classrogue_1_1LibraryBase_1a0cd39b5f070d2a6d91724c922e9d9661" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>LibraryBase</name></member>
      <member refid="classrogue_1_1LibraryBase_1a308ef5e88a5fef9bc6d8c6d4b7f8499e" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>log_</name></member>
      <member refid="classrogue_1_1LibraryBase_1a07ba2af640e31bab2b9adde56da03240" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>memSlaves_</name></member>
      <member refid="classrogue_1_1LibraryBase_1af2de309b79ab8f08fde5882bb43eeeab" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>memSlavesMissing_</name></member>
      <member refid="classrogue_1_1LibraryBase_1ab06673b0f48de54c7f80f546bf0d0746" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>parseMemMap</name></member>
      <member refid="classrogue_1_1LibraryBase_1ae8b78b429420f666f3836404cd80ca09" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>parseMemMap</name></member>
      <member refid="classrogue_1_1LibraryBase_1abcc8579b2d72071dfb63a1211241aee4" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>parseMemMap</name></member>
      <member refid="classrogue_1_1LibraryBase_1ae0530ccda9fde161b408708e99527192" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>readAll</name></member>
      <member refid="classrogue_1_1LibraryBase_1a5b40a69ccecc9ef31fe133b4ccf7c18f" prot="private" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>variables_</name></member>
      <member refid="classrogue_1_1LibraryBase_1a15575f86c56e38123c4ab0b73b3cb686" prot="public" virt="non-virtual"><scope>rogue::LibraryBase</scope><name>~LibraryBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
