<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1memory_1_1Transaction" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::memory::Transaction</compoundname>
    <basecompoundref refid="classrogue_1_1EnableSharedFromThis" prot="public" virt="non-virtual">rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Transaction &gt;</basecompoundref>
    <includes refid="Transaction_8h" local="no">Transaction.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab35827b018cd3000de36a1cad2373d21" prot="public" static="no">
        <type>uint8_t *</type>
        <definition>typedef uint8_t* rogue::interfaces::memory::Transaction::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Alias for using uint8_t * as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab35827b018cd3000de36a1cad2373d21" kindref="member">Transaction::iterator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="59" column="33" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a28693a5c69bdb9b2d5b91d885f8b9838" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TransactionLock</definition>
        <argsstring></argsstring>
        <name>TransactionLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="52" column="13" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a34b85c36cc2386b553fcff72fc15a596" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Master</definition>
        <argsstring></argsstring>
        <name>Master</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="53" column="13" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aea14f5495b4697c28ed665a9054acf5e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Hub</definition>
        <argsstring></argsstring>
        <name>Hub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="54" column="13" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a17b817ad7a85f3fa060ccba4d9d963df" prot="private" static="yes" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::classIdx_</definition>
        <argsstring></argsstring>
        <name>classIdx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="64" column="32" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a802c1b6273d351e06cbdde6d91467c4d" prot="private" static="yes" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rogue::interfaces::memory::Transaction::classMtx_</definition>
        <argsstring></argsstring>
        <name>classMtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="67" column="34" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a34d13f9fa8bc5fb223ad41fc85fc80a0" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable rogue::interfaces::memory::Transaction::cond_</definition>
        <argsstring></argsstring>
        <name>cond_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="70" column="40" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aeabb4983c2197e567123dfa53fc7ce50" prot="protected" static="no" mutable="no">
        <type>struct timeval</type>
        <definition>struct timeval rogue::interfaces::memory::Transaction::timeout_</definition>
        <argsstring></argsstring>
        <name>timeout_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="70" column="40" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aa206fc95e6b3dfb04beabc3bc8e4b57c" prot="protected" static="no" mutable="no">
        <type>struct timeval</type>
        <definition>struct timeval rogue::interfaces::memory::Transaction::endTime_</definition>
        <argsstring></argsstring>
        <name>endTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="70" column="40" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a459fbb7934c57006bbf23d8132adfaf3" prot="protected" static="no" mutable="no">
        <type>struct timeval</type>
        <definition>struct timeval rogue::interfaces::memory::Transaction::startTime_</definition>
        <argsstring></argsstring>
        <name>startTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="70" column="40" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a0deee61005984f9db783283fbf143ad5" prot="protected" static="no" mutable="no">
        <type>struct timeval</type>
        <definition>struct timeval rogue::interfaces::memory::Transaction::warnTime_</definition>
        <argsstring></argsstring>
        <name>warnTime_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="70" column="40" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a6194db958f3970e2cebab9fcf9a6c1d3" prot="protected" static="no" mutable="no">
        <type>Py_buffer</type>
        <definition>Py_buffer rogue::interfaces::memory::Transaction::pyBuf_</definition>
        <argsstring></argsstring>
        <name>pyBuf_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="88" column="26" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a2d82057c96e6b9650322e8fb82db746e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Transaction::pyValid_</definition>
        <argsstring></argsstring>
        <name>pyValid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="92" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1afe46ffc40d0445501a413ad872a32291" prot="protected" static="no" mutable="no">
        <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab35827b018cd3000de36a1cad2373d21" kindref="member">iterator</ref></type>
        <definition>iterator rogue::interfaces::memory::Transaction::iter_</definition>
        <argsstring></argsstring>
        <name>iter_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="95" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab33c239c97affc9337b9b2487b9c051b" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::Transaction::address_</definition>
        <argsstring></argsstring>
        <name>address_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="98" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a45a5fc539bcf4598239ef6f4181582ea" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="101" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a44bc3d4eaa900a0aa10defba45fba664" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="104" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ac6ba743be1e85ed350b9794919da82bb" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Transaction::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="107" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a253359a7a3f13fdd0af62015b12ddcf4" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="110" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a509585dfc7f628dc242aebe2951cae48" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Transaction::done_</definition>
        <argsstring></argsstring>
        <name>done_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="113" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a442c9938c38855aa46012777b66d4c18" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rogue::interfaces::memory::Transaction::lock_</definition>
        <argsstring></argsstring>
        <name>lock_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="116" column="27" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a1a3b302b8a1197e3280b1fe7c0581a09" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1Logging" kindref="compound">rogue::Logging</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::Logging&gt; rogue::interfaces::memory::Transaction::log_</definition>
        <argsstring></argsstring>
        <name>log_</name>
        <briefdescription>
<para>Log. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="119" column="32" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aa6269cff5d2b097f147c447d0a4e5848" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">rogue::interfaces::memory::Transaction</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::interfaces::memory::Transaction&gt; rogue::interfaces::memory::Transaction::create</definition>
        <argsstring>(struct timeval timeout)</argsstring>
        <name>create</name>
        <param>
          <type>struct timeval</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="122" column="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a537f6cdff63245d873e75eadf31a85ce" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Transaction::wait</definition>
        <argsstring>()</argsstring>
        <name>wait</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="125" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a3123d9e91bc562c4df62d27cc636f17c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::memory::Transaction::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="130" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a99603b75776c2bf4c783af29e624f73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::Transaction::Transaction</definition>
        <argsstring>(struct timeval timeout)</argsstring>
        <name>Transaction</name>
        <param>
          <type>struct timeval</type>
          <declname>timeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="133" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a589e1bc8dd91b5c6c001bc7533b2b02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::Transaction::~Transaction</definition>
        <argsstring>()</argsstring>
        <name>~Transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="136" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aeaeb3980a9e5959eb23d2181eeeddc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1TransactionLock" kindref="compound">rogue::interfaces::memory::TransactionLock</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::interfaces::memory::TransactionLock&gt; rogue::interfaces::memory::Transaction::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
<para>Lock <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> and return a TransactionLockPtr object. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aeaeb3980a9e5959eb23d2181eeeddc49" kindref="member">lock()</ref> to Python <simplesect kind="return"><para><ref refid="classrogue_1_1interfaces_1_1memory_1_1TransactionLock" kindref="compound">TransactionLock</ref> pointer (TransactonLockPtr) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="142" column="32"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a35616717f6d15c8978ba296b7fce816c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Transaction::expired</definition>
        <argsstring>()</argsstring>
        <name>expired</name>
        <briefdescription>
<para>Get expired flag. </para>
        </briefdescription>
        <detaileddescription>
<para>The expired flag is set by the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Master" kindref="compound">Master</ref> when the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> times out and the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Master" kindref="compound">Master</ref> is no longer waiting for the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> to complete. Lock must be held before checking the expired status.</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a35616717f6d15c8978ba296b7fce816c" kindref="member">expired()</ref> to Python <simplesect kind="return"><para>True if transaction is expired. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="152" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a1f14874141680a7184b8277c61444d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::id</definition>
        <argsstring>()</argsstring>
        <name>id</name>
        <briefdescription>
<para>Get 32-bit <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a1f14874141680a7184b8277c61444d5b" kindref="member">id()</ref> to Python <simplesect kind="return"><para>32-bit transaction ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="158" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a07b199ad3b8c4fec6ab3e7a334722aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::Transaction::address</definition>
        <argsstring>()</argsstring>
        <name>address</name>
        <briefdescription>
<para>Get <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> address. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a07b199ad3b8c4fec6ab3e7a334722aad" kindref="member">address()</ref> to Python <simplesect kind="return"><para>64-bit <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> ID </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="164" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a7c0e8ed1b737a70043b5e8f4c5eb4153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
<para>Get <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> size. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a7c0e8ed1b737a70043b5e8f4c5eb4153" kindref="member">size()</ref> to Python <simplesect kind="return"><para>32-bit <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="170" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ac03d3ff263b5a59ddbc8ab67bdc2758e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Transaction::type</definition>
        <argsstring>()</argsstring>
        <name>type</name>
        <briefdescription>
<para>Get <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> type. </para>
        </briefdescription>
        <detaileddescription>
<para>The transaction type values are defined in Constants Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ac03d3ff263b5a59ddbc8ab67bdc2758e" kindref="member">type()</ref> to Python <simplesect kind="return"><para>32-bit <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="177" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a6c0d228b3631ba8c038a8491a6518022" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Transaction::refreshTimer</definition>
        <argsstring>(std::shared_ptr&lt; rogue::interfaces::memory::Transaction &gt; reference)</argsstring>
        <name>refreshTimer</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">rogue::interfaces::memory::Transaction</ref> &gt;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Refresh transaction timer. </para>
        </briefdescription>
        <detaileddescription>
<para>Called to refresh the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> timer. If the passed reference <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> is NULL or the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> start time is later than the reference transaction, the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> timer will be refreshed.</para>
<para>Not exposed to Python <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference TransactionPtr </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="187" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1af6331d51aebb4d0cf07ea55b62de7f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Transaction::done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <briefdescription>
<para>Complete transaction without error. </para>
        </briefdescription>
        <detaileddescription>
<para>Lock must be held before calling this method. The error types are defined in Constants.</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1af6331d51aebb4d0cf07ea55b62de7f21" kindref="member">done()</ref> to Python </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="195" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1acc83400c79ebb69dd1f1ecd6e2fda07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Transaction::errorPy</definition>
        <argsstring>(std::string error)</argsstring>
        <name>errorPy</name>
        <param>
          <type>std::string</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Complete transaction with passed error, python interface. </para>
        </briefdescription>
        <detaileddescription>
<para>Lock must be held before calling this method.</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a9c3f54d3fcfa0766984039b6739629da" kindref="member">error()</ref> to Python <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> error message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="203" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a9c3f54d3fcfa0766984039b6739629da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Transaction::error</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>error</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Complete transaction with passed error. </para>
        </briefdescription>
        <detaileddescription>
<para>Lock must be held before calling this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> error message </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="210" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ae7f4fa7ac6a43bcc2d6b75dcb7d2faaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* rogue::interfaces::memory::Transaction::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Get start iterator for <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> data. </para>
        </briefdescription>
        <detaileddescription>
<para>Not exposed to Python</para>
<para>Lock must be held before calling this method and while updating <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> data. <simplesect kind="return"><para>Data iterator as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab35827b018cd3000de36a1cad2373d21" kindref="member">Transaction::iterator</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="219" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1add2caaa7f03d3b4a580dfdbd06922cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* rogue::interfaces::memory::Transaction::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Get end iterator for <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> data. </para>
        </briefdescription>
        <detaileddescription>
<para>Not exposed to Python</para>
<para>Lock must be held before calling this method and while updating <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> data. <simplesect kind="return"><para>Data iterator as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab35827b018cd3000de36a1cad2373d21" kindref="member">Transaction::iterator</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="228" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a07bd8bccdcba6384f5976d148ce362ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Transaction::getData</definition>
        <argsstring>(boost::python::object p, uint32_t offset)</argsstring>
        <name>getData</name>
        <param>
          <type>boost::python::object</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Method for copying transaction data to Python byte array. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed to Python as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a07bd8bccdcba6384f5976d148ce362ff" kindref="member">getData()</ref></para>
<para>The size of the data to be copied is defined by the size of the passed data buffer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Python byte array object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset for <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> data access. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="240" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aba98e4513c63a75e9146807361c6eb75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Transaction::setData</definition>
        <argsstring>(boost::python::object p, uint32_t offset)</argsstring>
        <name>setData</name>
        <param>
          <type>boost::python::object</type>
          <declname>p</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Method for copying transaction data from Python byte array. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed to Python as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aba98e4513c63a75e9146807361c6eb75" kindref="member">setData()</ref></para>
<para>The size of the data to be copied is defined by the size of the passed data buffer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Python byte array object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset for <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> data access. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="250" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> Container. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> is passed between the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Master" kindref="compound">Master</ref> and <ref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" kindref="compound">Slave</ref> to initiate a transaction. The <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> class contains information about the transaction as well as the transaction data pointer. Each created transaction object has a unique 32-bit transaction ID which is used to track the transaction. Transactions are never created directly, instead they are created in the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a34b85c36cc2386b553fcff72fc15a596" kindref="member">Master()</ref> class. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rogue::interfaces::memory::Transaction</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Transaction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Transaction &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rogue::interfaces::memory::Transaction</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Transaction"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>lock_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>error_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>log_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="5">
        <label>std::mutex</label>
      </node>
      <node id="8">
        <label>std::shared_ptr&lt; rogue::Logging &gt;</label>
        <childnode refid="9" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>rogue::Logging</label>
        <link refid="classrogue_1_1Logging"/>
      </node>
      <node id="4">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Transaction &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::string</label>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" line="51" column="63" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Transaction.h" bodystart="51" bodyend="252"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a07b199ad3b8c4fec6ab3e7a334722aad" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>address</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab33c239c97affc9337b9b2487b9c051b" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>address_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ae7f4fa7ac6a43bcc2d6b75dcb7d2faaa" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>begin</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a17b817ad7a85f3fa060ccba4d9d963df" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>classIdx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a802c1b6273d351e06cbdde6d91467c4d" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>classMtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a34d13f9fa8bc5fb223ad41fc85fc80a0" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>cond_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aa6269cff5d2b097f147c447d0a4e5848" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1af6331d51aebb4d0cf07ea55b62de7f21" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>done</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a509585dfc7f628dc242aebe2951cae48" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>done_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1add2caaa7f03d3b4a580dfdbd06922cfe" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>end</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aa206fc95e6b3dfb04beabc3bc8e4b57c" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>endTime_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a9c3f54d3fcfa0766984039b6739629da" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>error</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ac6ba743be1e85ed350b9794919da82bb" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>error_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1acc83400c79ebb69dd1f1ecd6e2fda07d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>errorPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a35616717f6d15c8978ba296b7fce816c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>expired</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a07bd8bccdcba6384f5976d148ce362ff" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>getData</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aea14f5495b4697c28ed665a9054acf5e" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>Hub</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a1f14874141680a7184b8277c61444d5b" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>id</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a253359a7a3f13fdd0af62015b12ddcf4" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>id_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1afe46ffc40d0445501a413ad872a32291" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>iter_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ab35827b018cd3000de36a1cad2373d21" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>iterator</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aeaeb3980a9e5959eb23d2181eeeddc49" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>lock</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a442c9938c38855aa46012777b66d4c18" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>lock_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a1a3b302b8a1197e3280b1fe7c0581a09" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>log_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a34b85c36cc2386b553fcff72fc15a596" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a6194db958f3970e2cebab9fcf9a6c1d3" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>pyBuf_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a2d82057c96e6b9650322e8fb82db746e" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>pyValid_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a6c0d228b3631ba8c038a8491a6518022" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>refreshTimer</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aba98e4513c63a75e9146807361c6eb75" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>setData</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a3123d9e91bc562c4df62d27cc636f17c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a7c0e8ed1b737a70043b5e8f4c5eb4153" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>size</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a45a5fc539bcf4598239ef6f4181582ea" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>size_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a459fbb7934c57006bbf23d8132adfaf3" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>startTime_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1aeabb4983c2197e567123dfa53fc7ce50" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>timeout_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a99603b75776c2bf4c783af29e624f73b" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>Transaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a28693a5c69bdb9b2d5b91d885f8b9838" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>TransactionLock</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1ac03d3ff263b5a59ddbc8ab67bdc2758e" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>type</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a44bc3d4eaa900a0aa10defba45fba664" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>type_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a537f6cdff63245d873e75eadf31a85ce" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>wait</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a0deee61005984f9db783283fbf143ad5" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>warnTime_</name></member>
      <member refid="classrogue_1_1EnableSharedFromThisBase_1a30602a01922086d80c07a8099278b41a" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>~EnableSharedFromThisBase</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Transaction_1a589e1bc8dd91b5c6c001bc7533b2b02c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Transaction</scope><name>~Transaction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
