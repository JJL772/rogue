<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::memory::SlaveWrap</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" prot="public" virt="non-virtual">rogue::interfaces::memory::Slave</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">boost::python::wrapper&lt; rogue::interfaces::memory::Slave &gt;</basecompoundref>
    <includes refid="memory_2Slave_8h" local="no">Slave.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a91998afeb3dc4cfe9317dd509a9dde0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::SlaveWrap::SlaveWrap</definition>
        <argsstring>(uint32_t min, uint32_t max)</argsstring>
        <name>SlaveWrap</name>
        <param>
          <type>uint32_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="235" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1af1619a08ef954998deefee89965dc501" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::SlaveWrap::doMinAccess</definition>
        <argsstring>()</argsstring>
        <name>doMinAccess</name>
        <reimplements refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1ae690bb54ec073edbd751d8362617a7f9">doMinAccess</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="238" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a6a5d3229ec5c6bb5dd52f4e51935919d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::SlaveWrap::defDoMinAccess</definition>
        <argsstring>()</argsstring>
        <name>defDoMinAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="241" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a27f91bb48d6669f80130c58502b4bec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::SlaveWrap::doMaxAccess</definition>
        <argsstring>()</argsstring>
        <name>doMaxAccess</name>
        <reimplements refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1aaa9fdbb5cc041f56343344e1c32db679">doMaxAccess</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="244" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a1294e37d75a4a21a453893de9946bd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::SlaveWrap::defDoMaxAccess</definition>
        <argsstring>()</argsstring>
        <name>defDoMaxAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="247" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1acc0560d8ae8b10f0dab32d9cc94d3b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::SlaveWrap::doAddress</definition>
        <argsstring>()</argsstring>
        <name>doAddress</name>
        <reimplements refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a435848e7e20020e67ec76a9ef157b990">doAddress</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="250" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a3431d3429229dfd5f0bfe57a399c68a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::SlaveWrap::defDoAddress</definition>
        <argsstring>()</argsstring>
        <name>defDoAddress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="253" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1ad67e84e312c96a23bb1518cc52cf5c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::SlaveWrap::doTransaction</definition>
        <argsstring>(std::shared_ptr&lt; rogue::interfaces::memory::Transaction &gt; transaction)</argsstring>
        <name>doTransaction</name>
        <reimplements refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a43c5e62dd732c5ecff7dadb0a5a8bfa2">doTransaction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">rogue::interfaces::memory::Transaction</ref> &gt;</type>
          <declname>transaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="256" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a6b9f2614b18c2ef20d7f2a7251567e2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::SlaveWrap::defDoTransaction</definition>
        <argsstring>(std::shared_ptr&lt; rogue::interfaces::memory::Transaction &gt; transaction)</argsstring>
        <name>defDoTransaction</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">rogue::interfaces::memory::Transaction</ref> &gt;</type>
          <declname>transaction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="259" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>boost::python::wrapper&lt; rogue::interfaces::memory::Slave &gt;</label>
      </node>
      <node id="1">
        <label>rogue::interfaces::memory::SlaveWrap</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Slave"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>boost::python::wrapper&lt; rogue::interfaces::memory::Slave &gt;</label>
      </node>
      <node id="1">
        <label>rogue::interfaces::memory::SlaveWrap</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Slave"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" line="230" column="43" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Slave.h" bodystart="228" bodyend="261"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a97ac9ad623a4920c6ebf58bc18e7ec7f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>addTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a2cfe1d611cc9cb725acf98b9dd78bf21" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a3431d3429229dfd5f0bfe57a399c68a1" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>defDoAddress</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a1294e37d75a4a21a453893de9946bd06" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>defDoMaxAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a6a5d3229ec5c6bb5dd52f4e51935919d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>defDoMinAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a6b9f2614b18c2ef20d7f2a7251567e2e" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>defDoTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1acc0560d8ae8b10f0dab32d9cc94d3b40" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>doAddress</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a27f91bb48d6669f80130c58502b4bec2" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>doMaxAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1af1619a08ef954998deefee89965dc501" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>doMinAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1af5ce81bef7de4de74c1e3cede21d8919" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>doSlaveId</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a46c858794b25f486c4909cbbef5df5f4" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>doSlaveName</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1ad67e84e312c96a23bb1518cc52cf5c05" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>doTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a4bf250f6776be14c6d8ed924807eba82" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>getTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a470bd4cecb4444fd59b553825cd67129" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>id</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1aa934540c189dc41ee19f7124e7526f85" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>lshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a7214283697192866d04f4fd84e6952d5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>max</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1afcc3624c3622839e96cf5861593c255c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>min</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a282550bb08cdd6f5e06db13835bd5f6f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>name</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a633b040c861b41682af1b8f549223631" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1adabad1d0e8d40325ca6dfeeeb6df19ac" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>setName</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1afebd18e8302957664356d6d7e05bcd88" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a8957d9bc3be4fd66028d296f03a2db94" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1SlaveWrap_1a91998afeb3dc4cfe9317dd509a9dde0b" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>SlaveWrap</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a22bce0d8c63db18645e193f27b4eca5d" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>stop</name></member>
      <member refid="classrogue_1_1EnableSharedFromThisBase_1a30602a01922086d80c07a8099278b41a" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>~EnableSharedFromThisBase</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a0b97756687857c4825e02b7538eb4ae5" prot="public" virt="virtual"><scope>rogue::interfaces::memory::SlaveWrap</scope><name>~Slave</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
