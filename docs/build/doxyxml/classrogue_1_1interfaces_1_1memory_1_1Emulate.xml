<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1memory_1_1Emulate" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::memory::Emulate</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" prot="public" virt="non-virtual">rogue::interfaces::memory::Slave</basecompoundref>
    <includes refid="Emulate_8h" local="no">Emulate.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a6530fe572a320527ad073252e215af56" prot="private" static="no" mutable="no">
        <type><ref refid="Emulate_8h_1aa016f26675334cfc166d97dc9ec7d318" kindref="member">MAP_TYPE</ref></type>
        <definition>MAP_TYPE rogue::interfaces::memory::Emulate::memMap_</definition>
        <argsstring></argsstring>
        <name>memMap_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="47" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a0c86ab9e5b816b79d6e74a612bf09e92" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rogue::interfaces::memory::Emulate::mtx_</definition>
        <argsstring></argsstring>
        <name>mtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="50" column="27" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1ac49722f9b92e69991eb275964443d553" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Emulate" kindref="compound">rogue::interfaces::memory::Emulate</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::interfaces::memory::Emulate&gt; rogue::interfaces::memory::Emulate::create</definition>
        <argsstring>(uint32_t min, uint32_t max)</argsstring>
        <name>create</name>
        <param>
          <type>uint32_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Class factory which returns a pointer to a <ref refid="classrogue_1_1interfaces_1_1memory_1_1Emulate" kindref="compound">Emulate</ref> (EmulatePtr) </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed to Python as rogue.interfaces.memory.Emualte()</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The min transaction size, 0 if not a virtual memory space root </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>The max transaction size, 0 if not a virtual memory space root </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="60" column="39"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1ac32a1c7652dd28f40bea60d3e62eb9b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::memory::Emulate::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="63" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a623920cb9aae2031a6ad2ae3373148be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::Emulate::Emulate</definition>
        <argsstring>(uint32_t min, uint32_t max)</argsstring>
        <name>Emulate</name>
        <param>
          <type>uint32_t</type>
          <declname>min</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="66" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1aed2e35ab51bd04d24be7dc06f4e4cdfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::Emulate::~Emulate</definition>
        <argsstring>()</argsstring>
        <name>~Emulate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="69" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a62125d3c51dba0c227a5b1306046f660" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Emulate::doTransaction</definition>
        <argsstring>(std::shared_ptr&lt; rogue::interfaces::memory::Transaction &gt; transaction)</argsstring>
        <name>doTransaction</name>
        <reimplements refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a43c5e62dd732c5ecff7dadb0a5a8bfa2">doTransaction</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">rogue::interfaces::memory::Transaction</ref> &gt;</type>
          <declname>transaction</declname>
        </param>
        <briefdescription>
<para>Handle the incoming memory transaction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="72" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory interface Emlator device. </para>
    </briefdescription>
    <detaileddescription>
<para>This memory will respond to transactions, emilator hardware by responding to read and write transactions. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rogue::interfaces::memory::Emulate</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Emulate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Slave"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::memory::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rogue::interfaces::memory::Emulate</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Emulate"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Slave"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" line="44" column="36" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Emulate.h" bodystart="44" bodyend="73"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a97ac9ad623a4920c6ebf58bc18e7ec7f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>addTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1ac49722f9b92e69991eb275964443d553" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a435848e7e20020e67ec76a9ef157b990" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>doAddress</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1aaa9fdbb5cc041f56343344e1c32db679" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>doMaxAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1ae690bb54ec073edbd751d8362617a7f9" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>doMinAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1af5ce81bef7de4de74c1e3cede21d8919" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>doSlaveId</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a46c858794b25f486c4909cbbef5df5f4" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>doSlaveName</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a62125d3c51dba0c227a5b1306046f660" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>doTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a623920cb9aae2031a6ad2ae3373148be" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>Emulate</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a4bf250f6776be14c6d8ed924807eba82" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>getTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a470bd4cecb4444fd59b553825cd67129" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>id</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1aa934540c189dc41ee19f7124e7526f85" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>lshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a7214283697192866d04f4fd84e6952d5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>max</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a6530fe572a320527ad073252e215af56" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>memMap_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1afcc3624c3622839e96cf5861593c255c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>min</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1a0c86ab9e5b816b79d6e74a612bf09e92" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>mtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a282550bb08cdd6f5e06db13835bd5f6f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>name</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a633b040c861b41682af1b8f549223631" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1adabad1d0e8d40325ca6dfeeeb6df19ac" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>setName</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1ac32a1c7652dd28f40bea60d3e62eb9b8" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a8957d9bc3be4fd66028d296f03a2db94" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a22bce0d8c63db18645e193f27b4eca5d" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>stop</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Emulate_1aed2e35ab51bd04d24be7dc06f4e4cdfb" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>~Emulate</name></member>
      <member refid="classrogue_1_1EnableSharedFromThisBase_1a30602a01922086d80c07a8099278b41a" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>~EnableSharedFromThisBase</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Slave_1a0b97756687857c4825e02b7538eb4ae5" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Emulate</scope><name>~Slave</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
