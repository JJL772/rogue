<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1memory_1_1TcpServer" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::memory::TcpServer</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1memory_1_1Master" prot="public" virt="non-virtual">rogue::interfaces::memory::Master</basecompoundref>
    <includes refid="memory_2TcpServer_8h" local="no">TcpServer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1aaa797a6a12f0a3d354b00a0819bcdefb" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::TcpServer::reqAddr_</definition>
        <argsstring></argsstring>
        <name>reqAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="42" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a704d6958f457edc16c863aa343f590f1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::TcpServer::respAddr_</definition>
        <argsstring></argsstring>
        <name>respAddr_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="45" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a9712adeb4d850cf251d3be9c2b98f108" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rogue::interfaces::memory::TcpServer::zmqCtx_</definition>
        <argsstring></argsstring>
        <name>zmqCtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="48" column="22" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a18d62e353674dff822f5ea74532ee3ac" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rogue::interfaces::memory::TcpServer::zmqReq_</definition>
        <argsstring></argsstring>
        <name>zmqReq_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="51" column="22" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a073c8eb78893332d817d3714c94fd7f8" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* rogue::interfaces::memory::TcpServer::zmqResp_</definition>
        <argsstring></argsstring>
        <name>zmqResp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="54" column="22" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a28095ca3d6db8181ba75afd715ac0143" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1Logging" kindref="compound">rogue::Logging</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::Logging&gt; rogue::interfaces::memory::TcpServer::bridgeLog_</definition>
        <argsstring></argsstring>
        <name>bridgeLog_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="60" column="32" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a717ccd214a50a67225ed2ff152610d4d" prot="private" static="no" mutable="no">
        <type>std::thread *</type>
        <definition>std::thread* rogue::interfaces::memory::TcpServer::thread_</definition>
        <argsstring></argsstring>
        <name>thread_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="63" column="29" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1aa759b7ca9dca64015f2d634be7ff08ae" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::TcpServer::threadEn_</definition>
        <argsstring></argsstring>
        <name>threadEn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="64" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1ab0760da0404757db477336d173159411" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::TcpServer::runThread</definition>
        <argsstring>()</argsstring>
        <name>runThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="57" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a9f1d11524848503266aec3e200aba777" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer" kindref="compound">rogue::interfaces::memory::TcpServer</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::interfaces::memory::TcpServer&gt; rogue::interfaces::memory::TcpServer::create</definition>
        <argsstring>(std::string addr, uint16_t port)</argsstring>
        <name>create</name>
        <param>
          <type>std::string</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer" kindref="compound">TcpServer</ref> object and return as a TcpServerPtr. </para>
        </briefdescription>
        <detaileddescription>
<para>The creator takes an address and port. The passed address can either be an IP address or hostname. The address string defines which network interface the socket server will listen on. A string of &quot;*&quot; results in all network interfaces being listened on. The memory bridge requires two TCP ports. The passed port is the base number of these two ports. A passed value of 8000 will result in both 8000 and 8001 being used by this bridge.</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer" kindref="compound">rogue.interfaces.memory.TcpServer()</ref> to Python <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Interface address </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Base port number to use for connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer" kindref="compound">TcpServer</ref> object as a TcpServerPtr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="82" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a12cf993941a293523a6f0b2f605ac681" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::memory::TcpServer::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="85" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a74b47ac23bb4ec347cd0ef265b3464ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::TcpServer::TcpServer</definition>
        <argsstring>(std::string addr, uint16_t port)</argsstring>
        <name>TcpServer</name>
        <param>
          <type>std::string</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="88" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1acc196417bb62fff4a7bc3b8f1243183c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::TcpServer::~TcpServer</definition>
        <argsstring>()</argsstring>
        <name>~TcpServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="91" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a13ae0461d72140f428533b184724eb7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::TcpServer::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="94" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a046b13353374adac9bc11ea8d9254c45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::TcpServer::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <reimplements refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a59be941f83e4a39df917d5402557324e">stop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="97" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory TCP Bridge Server. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements a TCP bridge between a memory <ref refid="classrogue_1_1interfaces_1_1memory_1_1Master" kindref="compound">Master</ref> and a memory <ref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" kindref="compound">Slave</ref>. The server side of the TCP bridge implements a memory <ref refid="classrogue_1_1interfaces_1_1memory_1_1Master" kindref="compound">Master</ref> device which executes the memory <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> to an attached <ref refid="classrogue_1_1interfaces_1_1memory_1_1Slave" kindref="compound">Slave</ref>. On the other end of the link a <ref refid="classrogue_1_1interfaces_1_1memory_1_1TcpClient" kindref="compound">TcpClient</ref> accepts a memory <ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> from an attached <ref refid="classrogue_1_1interfaces_1_1memory_1_1Master" kindref="compound">Master</ref> and forwards it to this TcpSver. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>rogue::interfaces::memory::TcpServer</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Master</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Master"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>rogue::interfaces::memory::TcpServer</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Master</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Master"/>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" line="39" column="66" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/TcpServer.h" bodystart="39" bodyend="99"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aa316b88cca37ab6d999c399ba93b7254" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>anyBits</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a041d0bc5879f24ca641346798a142fec" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>anyBitsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a28095ca3d6db8181ba75afd715ac0143" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>bridgeLog_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1ab94eee23b721f15501a90306f73837f5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>clearError</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a13ae0461d72140f428533b184724eb7a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>close</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aa37321dd4e1bc5889478bb8eca55a297" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>copyBits</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a55965b1cc0f77f427cb9d946cc4ccb8d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>copyBitsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a9f1d11524848503266aec3e200aba777" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a5dd3efeb0123543b07db88eeace87d94" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::memory::Master::"><scope>rogue::interfaces::memory::TcpServer</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a491fa0c7d4565146e8baafc7ffa73346" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>getError</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a20364eb7d4b6d3d666e434ac1fd77a7d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>getSlave</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a33ea89bb24e4d4115c8fef6c145c7a02" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>intTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a9899ebfecc6e7e35cebdbca4d0e40f6e" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aa7eb8183583f6084fea07821eb7ff2af" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>operator&gt;&gt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1aaa797a6a12f0a3d354b00a0819bcdefb" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqAddr_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a777233e4f6f27148360effe500e9e957" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqAddress</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1ae06e314257d14ff11f29c0b72118519a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqMaxAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a71984f8156f77b2b9066ef576c64a6a2" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqMinAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a442a5dc81c6f1bcabf2abf726e8f5a99" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqSlaveId</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a615c288b0fdad6a5d1101479b9fb74d6" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqSlaveName</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a06ef5ce0dae7d9b761bd3d363d6654ae" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1afe115af98acf6bb16f7e831ff73ec69a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>reqTransactionPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a704d6958f457edc16c863aa343f590f1" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>respAddr_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a47ff28f879439aa3909fec046b68b5c3" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>rshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1ab0760da0404757db477336d173159411" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>runThread</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a5dac52c5af2fd91d17f8b10d0542330a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>setBits</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a151cd43ee75c40a69722355aee868ca0" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>setBitsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a6de8890cdcdc2de6148283334c7b3413" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>setSlave</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aab53da8b6940f03c7220b462c984fd12" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>setTimeout</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a12cf993941a293523a6f0b2f605ac681" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a046b13353374adac9bc11ea8d9254c45" prot="public" virt="virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>stop</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a74b47ac23bb4ec347cd0ef265b3464ea" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>TcpServer</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a717ccd214a50a67225ed2ff152610d4d" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>thread_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1aa759b7ca9dca64015f2d634be7ff08ae" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>threadEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aad065c2019c8c9d5e0f7c53b1ea05591" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>waitTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a9712adeb4d850cf251d3be9c2b98f108" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>zmqCtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a18d62e353674dff822f5ea74532ee3ac" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>zmqReq_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1a073c8eb78893332d817d3714c94fd7f8" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>zmqResp_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a80a2fce11f04d0e2dd6202958ef377a0" prot="public" virt="virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>~Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1TcpServer_1acc196417bb62fff4a7bc3b8f1243183c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::TcpServer</scope><name>~TcpServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
