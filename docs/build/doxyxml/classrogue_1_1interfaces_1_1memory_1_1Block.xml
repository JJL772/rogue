<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1memory_1_1Block" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::memory::Block</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1memory_1_1Master" prot="public" virt="non-virtual">rogue::interfaces::memory::Master</basecompoundref>
    <includes refid="Block_8h" local="no">Block.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a91a7c9b385b2a33d3c3fbfb355373fd0" prot="protected" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex rogue::interfaces::memory::Block::mtx_</definition>
        <argsstring></argsstring>
        <name>mtx_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="80" column="27" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a27c7b3333b48485841ac4ff0abc283c9" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Block::path_</definition>
        <argsstring></argsstring>
        <name>path_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="83" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a6db805161d278481e05e384dc1ce4286" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Block::mode_</definition>
        <argsstring></argsstring>
        <name>mode_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="86" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ac8ab198afd3892af7a5b0e002da9fa07" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::bulkOpEn_</definition>
        <argsstring></argsstring>
        <name>bulkOpEn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="89" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a1f23a409fe8575cf3799672e08dca087" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::updateEn_</definition>
        <argsstring></argsstring>
        <name>updateEn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="92" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a20e239fef7f83d8ca351a6e550ab0b39" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::verifyEn_</definition>
        <argsstring></argsstring>
        <name>verifyEn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="95" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a7a163c7515c3e8b22377f145e8c2402c" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::verifyReq_</definition>
        <argsstring></argsstring>
        <name>verifyReq_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="98" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a6bdf17633b266d8849b8ebd6976e6bfa" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::verifyInp_</definition>
        <argsstring></argsstring>
        <name>verifyInp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="101" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ac483b7db37f862fd0decb411b142e1d2" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Block::verifyBase_</definition>
        <argsstring></argsstring>
        <name>verifyBase_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="104" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a1eb26ee43a59717b6b72e94e055af451" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Block::verifySize_</definition>
        <argsstring></argsstring>
        <name>verifySize_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="107" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a16b5354e339ef04ba03971d7df613039" prot="protected" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rogue::interfaces::memory::Block::blockData_</definition>
        <argsstring></argsstring>
        <name>blockData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="110" column="24" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a385fe499d3a6c3c701e739b8bbdc7239" prot="protected" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rogue::interfaces::memory::Block::verifyData_</definition>
        <argsstring></argsstring>
        <name>verifyData_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="113" column="24" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ad27860a9442d5d6585d1d9e19b377ee0" prot="protected" static="no" mutable="no">
        <type>uint8_t *</type>
        <definition>uint8_t* rogue::interfaces::memory::Block::verifyMask_</definition>
        <argsstring></argsstring>
        <name>verifyMask_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="116" column="24" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a41bfc780ca3cd66978d3ebabf518ae64" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Block::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="119" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1afd749f0d002e56271a1c6dd4d274e1b8" prot="protected" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::Block::offset_</definition>
        <argsstring></argsstring>
        <name>offset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="122" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ac7402f31739caa53b0076f9e91d4d1d2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::doUpdate_</definition>
        <argsstring></argsstring>
        <name>doUpdate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="125" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aef64ca33923ad0dbf4b2f57bd8ef9021" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::blockPyTrans_</definition>
        <argsstring></argsstring>
        <name>blockPyTrans_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="128" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1adf3484dba693bc31e139733ec2e3b79d" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1Logging" kindref="compound">rogue::Logging</ref> &gt;</type>
        <definition>std::shared_ptr&lt;rogue::Logging&gt; rogue::interfaces::memory::Block::bLog_</definition>
        <argsstring></argsstring>
        <name>bLog_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="131" column="32" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a1004766a3ccb418f7a47cf1cab8a9f6a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::overlapEn_</definition>
        <argsstring></argsstring>
        <name>overlapEn_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="134" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a3465ef0cadb20998c069ae170ac2d0ba" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::shared_ptr&lt;rogue::interfaces::memory::Variable&gt; &gt; rogue::interfaces::memory::Block::variables_</definition>
        <argsstring></argsstring>
        <name>variables_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="137" column="28" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aaee78422e82fcd7ce1b5be2b1c7eeb7b" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::enable_</definition>
        <argsstring></argsstring>
        <name>enable_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="140" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ab2e22f2d59abfaff1e6897618b1fab8e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::stale_</definition>
        <argsstring></argsstring>
        <name>stale_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="143" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrogue_1_1interfaces_1_1memory_1_1Block_1afdfd440e7744aa5eee6593e503015a5a" prot="protected" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Block::retryCount_</definition>
        <argsstring></argsstring>
        <name>retryCount_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="146" column="25" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a4b76ef4403f0ab22d72bf371c45fabb5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::varUpdate</definition>
        <argsstring>()</argsstring>
        <name>varUpdate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="151" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aba1d11a3c75f49a2066efcf8164f6ea4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setBytes</definition>
        <argsstring>(const uint8_t *data, rogue::interfaces::memory::Variable *var, uint32_t index)</argsstring>
        <name>setBytes</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="163" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a6d122f03a2a8ae87a3a413bd50310323" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::getBytes</definition>
        <argsstring>(uint8_t *data, rogue::interfaces::memory::Variable *var, uint32_t index)</argsstring>
        <name>getBytes</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="166" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a103db50d5828d9d10fc8b12592a3084d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rogue::interfaces::memory::Block::customInit</definition>
        <argsstring>()</argsstring>
        <name>customInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="169" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1afb53a6123661660aa2c3bcb4786501a0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void rogue::interfaces::memory::Block::customClean</definition>
        <argsstring>()</argsstring>
        <name>customClean</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="172" column="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a6dd332538d6f6191cf8a3a3bf2a70c44" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::memory::Block::reverseBytes</definition>
        <argsstring>(uint8_t *data, uint32_t byteSize)</argsstring>
        <name>reverseBytes</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>byteSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="156" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a272d486c1f7939d08f87bffc4fa9ecfc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">rogue::interfaces::memory::Block</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::interfaces::memory::Block&gt; rogue::interfaces::memory::Block::create</definition>
        <argsstring>(uint64_t offset, uint32_t size)</argsstring>
        <name>create</name>
        <param>
          <type>uint64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Class factory which returns a pointer to a <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref> (BlockPtr) </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed to Python as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">rogue.interfaces.memory.Block()</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory offset of the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Memory size (footprint) of the <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="182" column="39"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aec4f91f3efdf02f4ce64e1e3d5e08841" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::memory::Block::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="185" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ac63e325ee3341e0bc41f0ef3c33b8f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::memory::Block::Block</definition>
        <argsstring>(uint64_t offset, uint32_t size)</argsstring>
        <name>Block</name>
        <param>
          <type>uint64_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="188" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aacec11c8166595f25d5eb75c403a49ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual rogue::interfaces::memory::Block::~Block</definition>
        <argsstring>()</argsstring>
        <name>~Block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="191" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a81a71b0be5db57665d7073ef2881df67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Block::path</definition>
        <argsstring>()</argsstring>
        <name>path</name>
        <briefdescription>
<para>Return the path of the block. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the path of the block in the device tree</para>
<para>Exposed as path property to Python <simplesect kind="return"><para>Full path of the block </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="199" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ab17d958ad7e6ef2b2404fc00297b3e5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Block::mode</definition>
        <argsstring>()</argsstring>
        <name>mode</name>
        <briefdescription>
<para>Return the mode of the block. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the mode of the block, the supported modes are &quot;RW&quot;, &quot;RO&quot; and &quot;WO&quot;</para>
<para>Exposed as mode property to Python <simplesect kind="return"><para>Mode string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="208" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a75519e5d98ae47c098cb38af709af491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::bulkOpEn</definition>
        <argsstring>()</argsstring>
        <name>bulkOpEn</name>
        <briefdescription>
<para>Return bulk enable flag. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the bulk enable flag, indicating if this block should be included in bulk read and write operations.</para>
<para>Exposed as bulkOpEn property to Python <simplesect kind="return"><para>bulk enable flag </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="217" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a69c92d09d2461d582c4d942999b54253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::overlapEn</definition>
        <argsstring>()</argsstring>
        <name>overlapEn</name>
        <briefdescription>
<para>Return overlap enable flag. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the overlap enable flag</para>
<para>Exposed as overlapEn property to Python <simplesect kind="return"><para>overlap enable flag </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="225" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a3ae26c89796bb9043994f72aa135ea9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setEnable</definition>
        <argsstring>(bool)</argsstring>
        <name>setEnable</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Set enable state. </para>
        </briefdescription>
        <detaileddescription>
<para>Set the enable state</para>
<para>Exposed as setEnable method to Python </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="232" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1af17777408fe5c97b097dce771de3c40d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setLogLevel</definition>
        <argsstring>(uint32_t level)</argsstring>
        <name>setLogLevel</name>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set logging level for block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="235" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1acf8d3ddaa62b256d3dd9228ea126ebb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::Block::offset</definition>
        <argsstring>()</argsstring>
        <name>offset</name>
        <briefdescription>
<para>Get offset of this <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the offset of this <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref></para>
<para>Exposed as offset property to Python <simplesect kind="return"><para>64-bit address offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="245" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ae9d2d675b60e3bd49094f0c672f9ebf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::Block::address</definition>
        <argsstring>()</argsstring>
        <name>address</name>
        <briefdescription>
<para>Get full address of this <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the full address of this block, including the parent address plus the local offset.</para>
<para>Exposed as address property to Python <simplesect kind="return"><para>64-bit address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="254" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a0d38d2cd0b8641a81bc212712d6ebcd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t rogue::interfaces::memory::Block::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
<para>Get size of this block in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the size of this block in bytes.</para>
<para>Exposed as size property to Python <simplesect kind="return"><para>32-bit size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="262" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aa38dcfa282892f008698e318800156e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::blockPyTrans</definition>
        <argsstring>()</argsstring>
        <name>blockPyTrans</name>
        <briefdescription>
<para>Get block python transactions flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="265" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a4fd0c83f8e529dfaf8c38b0e44513a9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::startTransaction</definition>
        <argsstring>(uint32_t type, bool forceWr, bool check, rogue::interfaces::memory::Variable *var, int32_t index=-1)</argsstring>
        <name>startTransaction</name>
        <param>
          <type>uint32_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceWr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Start a c++ transaction for this block. </para>
        </briefdescription>
        <detaileddescription>
<para>Start a c++ transaction with the passed type and access range</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forceWr</parametername>
</parameternamelist>
<parameterdescription>
<para>Force write of non-stale block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to indicate if the transaction results should be immediately checked </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> associated with transaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> index for list variables, -1 for full variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="291" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ad1d2397b354490bebe5bcb144a6b957b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::startTransactionPy</definition>
        <argsstring>(uint32_t type, bool forceWr, bool check, std::shared_ptr&lt; rogue::interfaces::memory::Variable &gt; var, int32_t index)</argsstring>
        <name>startTransactionPy</name>
        <param>
          <type>uint32_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceWr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Start a transaction for this block, python version. </para>
        </briefdescription>
        <detaileddescription>
<para>Start a transaction with the passed type and access range</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a4fd0c83f8e529dfaf8c38b0e44513a9f" kindref="member">startTransaction()</ref> method to Python</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forceWr</parametername>
</parameternamelist>
<parameterdescription>
<para>Force write of non-stale block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to indicate if the transaction results should be immediately checked </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> associated with transaction, None for block level </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> index for list variables, -1 for full variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="306" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a4a00c4cf979f668200bc9c97a756aa69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::checkTransaction</definition>
        <argsstring>()</argsstring>
        <name>checkTransaction</name>
        <briefdescription>
<para>Check transaction result, C++ version without python update calls. </para>
        </briefdescription>
        <detaileddescription>
<para>Check transaction result, an exception is thrown if an error occured. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="313" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ad37144d5f4b3cb60c0df60601e3358a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::checkTransactionPy</definition>
        <argsstring>()</argsstring>
        <name>checkTransactionPy</name>
        <briefdescription>
<para>Check transaction result, python version with update calls. </para>
        </briefdescription>
        <detaileddescription>
<para>Check transaction result, an exception is thrown if an error occured.</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a4a00c4cf979f668200bc9c97a756aa69" kindref="member">checkTransaction()</ref> method to Python </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="322" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a50badeae7759acbdeee458b6ed686ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::write</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index=-1)</argsstring>
        <name>write</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Issue write/verify/check sequence from c++. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="327" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a980dee08e997ff9aff91e94760c5c591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::read</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index=-1)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Issue read/check sequence from c++. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="330" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aed1e3aec51a587ccf9b04611014ad75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::addVariables</definition>
        <argsstring>(std::vector&lt; std::shared_ptr&lt; rogue::interfaces::memory::Variable &gt; &gt; variables)</argsstring>
        <name>addVariables</name>
        <param>
          <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt; &gt;</type>
          <declname>variables</declname>
        </param>
        <briefdescription>
<para>Add variables to block, C++ version. </para>
        </briefdescription>
        <detaileddescription>
<para>Add the passed list of variables to this block</para>
<para>Exposed as <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aed1e3aec51a587ccf9b04611014ad75c" kindref="member">addVariables()</ref> method to Python</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variables</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="339" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a0fc483d38029a77085e8cbead13e33a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::addVariablesPy</definition>
        <argsstring>(boost::python::object variables)</argsstring>
        <name>addVariablesPy</name>
        <param>
          <type>boost::python::object</type>
          <declname>variables</declname>
        </param>
        <briefdescription>
<para>Add variables to block, Python version. </para>
        </briefdescription>
        <detaileddescription>
<para>Add the passed list of variables to this block</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>variables</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> list </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="348" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a3c1540c658039f72b36b1b99c0b462d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;rogue::interfaces::memory::Variable&gt; &gt; rogue::interfaces::memory::Block::variables</definition>
        <argsstring>()</argsstring>
        <name>variables</name>
        <briefdescription>
<para>Return a list of variables in this block, C++ version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="353" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a25ebd19baa3dc510c11bfa66a6aa26ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::variablesPy</definition>
        <argsstring>()</argsstring>
        <name>variablesPy</name>
        <briefdescription>
<para>Return a list of variables in the block, python version. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the list of variables associated with this block</para>
<para>Exposed as variables property to Python </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="362" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1af806b8a22a6758bb2ba23a326e351af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::rateTest</definition>
        <argsstring>()</argsstring>
        <name>rateTest</name>
        <briefdescription>
<para>Rate test function for perfmance tests. </para>
        </briefdescription>
        <detaileddescription>
<para>Exposed as rateTest method to Python </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="370" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a2ce2489de0bf5e88b4953fc14f0e24ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setPyFunc</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setPyFunc</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="379" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a064bb34d85e5bf8f193262e888cc2099" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getPyFunc</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getPyFunc</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="382" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ad39fd22f0773739eed5c2aa958bd4a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setByteArrayPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setByteArrayPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using byte array, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="393" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aed57e3d7e0af7be2dfa14251ef5323ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getByteArrayPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getByteArrayPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using byte array, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="396" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ac608978216d5298ddcc848d86f985b57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setByteArray</definition>
        <argsstring>(const uint8_t *value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setByteArray</name>
        <param>
          <type>const uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using byte array, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="401" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aebe136a158e593f427238f3691f77e94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::getByteArray</definition>
        <argsstring>(uint8_t *value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getByteArray</name>
        <param>
          <type>uint8_t *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using byte array, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="404" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a8559a5863da7dd6201a961888b73704d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setUIntPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setUIntPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using unsigned int, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="413" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a74665c4f07fc93140e348bda686315ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getUIntPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getUIntPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using unsigned int, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="417" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a2528c83f7cb24cece6524efb8b97c9ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setUInt</definition>
        <argsstring>(const uint64_t &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setUInt</name>
        <param>
          <type>const uint64_t &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using unsigned int, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="422" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ab42fa03993cad26e611dfc478902048f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t rogue::interfaces::memory::Block::getUInt</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getUInt</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using unsigned int, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="425" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aacca171230f996de696923469f469d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setIntPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setIntPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using int, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="434" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a748bf247570d1200069a4e2acafc1181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getIntPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getIntPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using int, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="437" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aa2bd718de4956df41e14ae4246408d24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setInt</definition>
        <argsstring>(const int64_t &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setInt</name>
        <param>
          <type>const int64_t &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using int, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="442" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ac5019a45629acbad0ad8156405c3b620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t rogue::interfaces::memory::Block::getInt</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getInt</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using int, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="445" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a1abab7343c00bf80cd2ecf088ebffdba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setBoolPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setBoolPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using bool, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="454" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aacb0d5aaebbbd962ecc54c58e723332f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getBoolPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getBoolPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using bool, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="457" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1adea4239e57f1a66fe1e9f1b7ae10e579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setBool</definition>
        <argsstring>(const bool &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setBool</name>
        <param>
          <type>const bool &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using bool, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="462" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aacf26cf2dac9f02abc622bb64b2d3fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rogue::interfaces::memory::Block::getBool</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getBool</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using bool, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="465" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a9e5be0a78200eb43ab31fa6c8eb6d635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setStringPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setStringPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using String, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="474" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a0f568e62afb74f1faed28f6c520a0da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getStringPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getStringPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using String, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="477" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a011cadb051ee1ba41a37ceb8b544e260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setString</definition>
        <argsstring>(const std::string &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using String, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="482" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1af2835b3439611008bc6febb903b6dfb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string rogue::interfaces::memory::Block::getString</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getString</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using String, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="485" column="28"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a6406ea690b70b3309047c201a5b7aa65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::getString</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, std::string &amp;valueRet, int32_t index)</argsstring>
        <name>getString</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>valueRet</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data into String, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="488" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a89d0f4b81e4e6dafa6e8494758717513" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::getValue</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, std::string &amp;valueRet, int32_t index)</argsstring>
        <name>getValue</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>valueRet</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data into String, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="491" column="21" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a5db53637acbd094933bb690026b5a890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setFloatPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setFloatPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using Float, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="502" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ad3044a85bc4eae3e73b69bee3ee9271f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getFloatPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getFloatPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using Float, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="505" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a7ab4c760e7b10b928360b5e6f2e735ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setFloat</definition>
        <argsstring>(const float &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setFloat</name>
        <param>
          <type>const float &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using Float, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="510" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a2155ce26a7a35c978d367f6aca298335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float rogue::interfaces::memory::Block::getFloat</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getFloat</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using Float, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="513" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a0b3292d19d335553759e5a098b339ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setDoublePy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setDoublePy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using Double, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="522" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a7986812537c98926e49da31a512f680b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getDoublePy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getDoublePy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using Double, python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="525" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a2883a1a0262e382c1a4f9f7fc8bcb931" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setDouble</definition>
        <argsstring>(const double &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setDouble</name>
        <param>
          <type>const double &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using Double, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="530" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a20136cd067cb757fcd7404415b9574d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rogue::interfaces::memory::Block::getDouble</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getDouble</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using Double, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="533" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1afac8819b74c2d36c8687bbb458cb16aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setFixedPy</definition>
        <argsstring>(boost::python::object &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setFixedPy</name>
        <param>
          <type>boost::python::object &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using Fixed Point, Python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="542" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1aeb9c8823037b43cd521e81e65a5fd5fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>boost::python::object</type>
        <definition>boost::python::object rogue::interfaces::memory::Block::getFixedPy</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getFixedPy</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using Fixed Point, Python version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="545" column="38"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a269ec6c0106e7e793d8998409a42d14b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::setFixed</definition>
        <argsstring>(const double &amp;value, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>setFixed</name>
        <param>
          <type>const double &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Set data using Fixed Point, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="550" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1ab7357161825b10809fca15937e63764c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double rogue::interfaces::memory::Block::getFixed</definition>
        <argsstring>(rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>getFixed</name>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get data using Fixed Point, C++ <ref refid="classrogue_1_1Version" kindref="compound">Version</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="553" column="23"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1memory_1_1Block_1a5d22fc5662be8b8e109917a18740e9f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rogue::interfaces::memory::Block::intStartTransaction</definition>
        <argsstring>(uint32_t type, bool forceWr, bool check, rogue::interfaces::memory::Variable *var, int32_t index)</argsstring>
        <name>intStartTransaction</name>
        <param>
          <type>uint32_t</type>
          <declname>type</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceWr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>check</declname>
        </param>
        <param>
          <type><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">rogue::interfaces::memory::Variable</ref> *</type>
          <declname>var</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Start a c++ transaction for this block, internal version. </para>
        </briefdescription>
        <detaileddescription>
<para>Start a c++ transaction with the passed type and access range</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Transaction" kindref="compound">Transaction</ref> type </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>forceWr</parametername>
</parameternamelist>
<parameterdescription>
<para>Force write of non-stale block </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>check</parametername>
</parameternamelist>
<parameterdescription>
<para>Flag to indicate if the transaction results should be immediately checked </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>var</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> associated with transaction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classrogue_1_1interfaces_1_1memory_1_1Variable" kindref="compound">Variable</ref> index for list variables, -1 for full variable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="278" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Memory interface <ref refid="classrogue_1_1interfaces_1_1memory_1_1Block" kindref="compound">Block</ref> device. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>rogue::interfaces::memory::Master</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Master"/>
      </node>
      <node id="1">
        <label>rogue::interfaces::memory::Block</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>std::vector&lt; uint32_t &gt;</label>
      </node>
      <node id="9">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="6">
        <label>rogue::interfaces::memory::Variable</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Variable"/>
        <childnode refid="7" relation="usage">
          <edgelabel>bitSize_</edgelabel>
          <edgelabel>bitOffset_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>path_</edgelabel>
          <edgelabel>mode_</edgelabel>
          <edgelabel>getString_</edgelabel>
          <edgelabel>name_</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>block_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::mutex</label>
      </node>
      <node id="5">
        <label>std::shared_ptr&lt; rogue::interfaces::memory::Variable &gt;</label>
        <childnode refid="6" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>std::shared_ptr&lt; rogue::Logging &gt;</label>
        <childnode refid="11" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>rogue::Logging</label>
        <link refid="classrogue_1_1Logging"/>
      </node>
      <node id="2">
        <label>rogue::interfaces::memory::Master</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Master"/>
      </node>
      <node id="1">
        <label>rogue::interfaces::memory::Block</label>
        <link refid="classrogue_1_1interfaces_1_1memory_1_1Block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>mtx_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>variables_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>path_</edgelabel>
          <edgelabel>mode_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>bLog_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>std::string</label>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>std::vector&lt; std::shared_ptr&lt; rogue::interfaces::memory::Variable &gt; &gt;</label>
        <childnode refid="5" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" line="75" column="35" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/memory/Block.h" bodystart="75" bodyend="555"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ae9d2d675b60e3bd49094f0c672f9ebf1" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>address</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aed1e3aec51a587ccf9b04611014ad75c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>addVariables</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a0fc483d38029a77085e8cbead13e33a3" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>addVariablesPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aa316b88cca37ab6d999c399ba93b7254" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>anyBits</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a041d0bc5879f24ca641346798a142fec" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>anyBitsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ac63e325ee3341e0bc41f0ef3c33b8f2e" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>Block</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a16b5354e339ef04ba03971d7df613039" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>blockData_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aa38dcfa282892f008698e318800156e4" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>blockPyTrans</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aef64ca33923ad0dbf4b2f57bd8ef9021" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>blockPyTrans_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1adf3484dba693bc31e139733ec2e3b79d" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>bLog_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a75519e5d98ae47c098cb38af709af491" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>bulkOpEn</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ac8ab198afd3892af7a5b0e002da9fa07" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>bulkOpEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a4a00c4cf979f668200bc9c97a756aa69" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>checkTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ad37144d5f4b3cb60c0df60601e3358a5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>checkTransactionPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1ab94eee23b721f15501a90306f73837f5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>clearError</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aa37321dd4e1bc5889478bb8eca55a297" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>copyBits</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a55965b1cc0f77f427cb9d946cc4ccb8d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>copyBitsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a272d486c1f7939d08f87bffc4fa9ecfc" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a5dd3efeb0123543b07db88eeace87d94" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::memory::Master::"><scope>rogue::interfaces::memory::Block</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1afb53a6123661660aa2c3bcb4786501a0" prot="protected" virt="virtual"><scope>rogue::interfaces::memory::Block</scope><name>customClean</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a103db50d5828d9d10fc8b12592a3084d" prot="protected" virt="virtual"><scope>rogue::interfaces::memory::Block</scope><name>customInit</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ac7402f31739caa53b0076f9e91d4d1d2" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>doUpdate_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aaee78422e82fcd7ce1b5be2b1c7eeb7b" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>enable_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aacf26cf2dac9f02abc622bb64b2d3fbd" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getBool</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aacb0d5aaebbbd962ecc54c58e723332f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getBoolPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aebe136a158e593f427238f3691f77e94" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getByteArray</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aed57e3d7e0af7be2dfa14251ef5323ee" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getByteArrayPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a6d122f03a2a8ae87a3a413bd50310323" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getBytes</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a20136cd067cb757fcd7404415b9574d2" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getDouble</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a7986812537c98926e49da31a512f680b" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getDoublePy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a491fa0c7d4565146e8baafc7ffa73346" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getError</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ab7357161825b10809fca15937e63764c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getFixed</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aeb9c8823037b43cd521e81e65a5fd5fd" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getFixedPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a2155ce26a7a35c978d367f6aca298335" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getFloat</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ad3044a85bc4eae3e73b69bee3ee9271f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getFloatPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ac5019a45629acbad0ad8156405c3b620" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getInt</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a748bf247570d1200069a4e2acafc1181" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getIntPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a064bb34d85e5bf8f193262e888cc2099" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getPyFunc</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a20364eb7d4b6d3d666e434ac1fd77a7d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getSlave</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1af2835b3439611008bc6febb903b6dfb5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getString</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a6406ea690b70b3309047c201a5b7aa65" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getString</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a0f568e62afb74f1faed28f6c520a0da1" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getStringPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ab42fa03993cad26e611dfc478902048f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getUInt</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a74665c4f07fc93140e348bda686315ec" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getUIntPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a89d0f4b81e4e6dafa6e8494758717513" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>getValue</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a5d22fc5662be8b8e109917a18740e9f4" prot="private" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>intStartTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a33ea89bb24e4d4115c8fef6c145c7a02" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>intTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a9899ebfecc6e7e35cebdbca4d0e40f6e" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ab17d958ad7e6ef2b2404fc00297b3e5c" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>mode</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a6db805161d278481e05e384dc1ce4286" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>mode_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a91a7c9b385b2a33d3c3fbfb355373fd0" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>mtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1acf8d3ddaa62b256d3dd9228ea126ebb1" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>offset</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1afd749f0d002e56271a1c6dd4d274e1b8" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>offset_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aa7eb8183583f6084fea07821eb7ff2af" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>operator&gt;&gt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a69c92d09d2461d582c4d942999b54253" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>overlapEn</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a1004766a3ccb418f7a47cf1cab8a9f6a" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>overlapEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a81a71b0be5db57665d7073ef2881df67" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>path</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a27c7b3333b48485841ac4ff0abc283c9" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>path_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1af806b8a22a6758bb2ba23a326e351af2" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>rateTest</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a980dee08e997ff9aff91e94760c5c591" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>read</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a777233e4f6f27148360effe500e9e957" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqAddress</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1ae06e314257d14ff11f29c0b72118519a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqMaxAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a71984f8156f77b2b9066ef576c64a6a2" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqMinAccess</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a442a5dc81c6f1bcabf2abf726e8f5a99" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqSlaveId</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a615c288b0fdad6a5d1101479b9fb74d6" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqSlaveName</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a06ef5ce0dae7d9b761bd3d363d6654ae" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1afe115af98acf6bb16f7e831ff73ec69a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reqTransactionPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1afdfd440e7744aa5eee6593e503015a5a" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>retryCount_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a6dd332538d6f6191cf8a3a3bf2a70c44" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>reverseBytes</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a47ff28f879439aa3909fec046b68b5c3" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>rshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a5dac52c5af2fd91d17f8b10d0542330a" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setBits</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a151cd43ee75c40a69722355aee868ca0" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setBitsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1adea4239e57f1a66fe1e9f1b7ae10e579" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setBool</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a1abab7343c00bf80cd2ecf088ebffdba" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setBoolPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ac608978216d5298ddcc848d86f985b57" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setByteArray</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ad39fd22f0773739eed5c2aa958bd4a0f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setByteArrayPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aba1d11a3c75f49a2066efcf8164f6ea4" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setBytes</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a2883a1a0262e382c1a4f9f7fc8bcb931" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setDouble</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a0b3292d19d335553759e5a098b339ea3" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setDoublePy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a3ae26c89796bb9043994f72aa135ea9e" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setEnable</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a269ec6c0106e7e793d8998409a42d14b" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setFixed</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1afac8819b74c2d36c8687bbb458cb16aa" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setFixedPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a7ab4c760e7b10b928360b5e6f2e735ac" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setFloat</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a5db53637acbd094933bb690026b5a890" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setFloatPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aa2bd718de4956df41e14ae4246408d24" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setInt</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aacca171230f996de696923469f469d39" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setIntPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1af17777408fe5c97b097dce771de3c40d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setLogLevel</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a2ce2489de0bf5e88b4953fc14f0e24ae" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setPyFunc</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a6de8890cdcdc2de6148283334c7b3413" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setSlave</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a011cadb051ee1ba41a37ceb8b544e260" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setString</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a9e5be0a78200eb43ab31fa6c8eb6d635" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setStringPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aab53da8b6940f03c7220b462c984fd12" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setTimeout</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a2528c83f7cb24cece6524efb8b97c9ec" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setUInt</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a8559a5863da7dd6201a961888b73704d" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setUIntPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aec4f91f3efdf02f4ce64e1e3d5e08841" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a0d38d2cd0b8641a81bc212712d6ebcd8" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>size</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a41bfc780ca3cd66978d3ebabf518ae64" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>size_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ab2e22f2d59abfaff1e6897618b1fab8e" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>stale_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a4fd0c83f8e529dfaf8c38b0e44513a9f" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>startTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ad1d2397b354490bebe5bcb144a6b957b" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>startTransactionPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a59be941f83e4a39df917d5402557324e" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Block</scope><name>stop</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a1f23a409fe8575cf3799672e08dca087" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>updateEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a3c1540c658039f72b36b1b99c0b462d6" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>variables</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a3465ef0cadb20998c069ae170ac2d0ba" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>variables_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a25ebd19baa3dc510c11bfa66a6aa26ef" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>variablesPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a4b76ef4403f0ab22d72bf371c45fabb5" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>varUpdate</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ac483b7db37f862fd0decb411b142e1d2" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifyBase_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a385fe499d3a6c3c701e739b8bbdc7239" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifyData_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a20e239fef7f83d8ca351a6e550ab0b39" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifyEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a6bdf17633b266d8849b8ebd6976e6bfa" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifyInp_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1ad27860a9442d5d6585d1d9e19b377ee0" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifyMask_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a7a163c7515c3e8b22377f145e8c2402c" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifyReq_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a1eb26ee43a59717b6b72e94e055af451" prot="protected" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>verifySize_</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1aad065c2019c8c9d5e0f7c53b1ea05591" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>waitTransaction</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1a50badeae7759acbdeee458b6ed686ca5" prot="public" virt="non-virtual"><scope>rogue::interfaces::memory::Block</scope><name>write</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Block_1aacec11c8166595f25d5eb75c403a49ff" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Block</scope><name>~Block</name></member>
      <member refid="classrogue_1_1interfaces_1_1memory_1_1Master_1a80a2fce11f04d0e2dd6202958ef377a0" prot="public" virt="virtual"><scope>rogue::interfaces::memory::Block</scope><name>~Master</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
