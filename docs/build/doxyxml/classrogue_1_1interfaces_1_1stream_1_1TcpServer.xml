<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kind="class" language="C++" prot="public">
    <compoundname>rogue::interfaces::stream::TcpServer</compoundname>
    <basecompoundref refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore" prot="public" virt="non-virtual">rogue::interfaces::stream::TcpCore</basecompoundref>
    <includes refid="stream_2TcpServer_8h" local="no">TcpServer.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1a64da078c22f070650263c049d7b284f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">rogue::interfaces::stream::TcpServer</ref> &gt;</type>
        <definition>static std::shared_ptr&lt;rogue::interfaces::stream::TcpServer&gt; rogue::interfaces::stream::TcpServer::create</definition>
        <argsstring>(std::string addr, uint16_t port)</argsstring>
        <name>create</name>
        <param>
          <type>std::string</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">TcpServer</ref> object and return as a TcpServerPtr. </para>
        </briefdescription>
        <detaileddescription>
<para>The creator takes an address and port. The passed address can either be an IP address or hostname. The address string defines which network interface the socket server will listen on. A string of &quot;*&quot; results in all network interfaces being listened on. The stream bridge requires two TCP ports. The passed port is the base number of these two ports. A passed value of 8000 will result in both 8000 and 8001 being used by this bridge.</para>
<para>Exposed to Python as <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">rogue.interfaces.stream.TcpServer</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>addr</parametername>
</parameternamelist>
<parameterdescription>
<para>Interface address for server, remote server address for client. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Base port number of use for connection. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer" kindref="compound">TcpServer</ref> object as a TcpServerPtr </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpServer.h" line="56" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1a735eee827a16d929fe502e3e9e325bbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void rogue::interfaces::stream::TcpServer::setup_python</definition>
        <argsstring>()</argsstring>
        <name>setup_python</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpServer.h" line="59" column="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1ad048185817341ad9951b945104a4f7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::stream::TcpServer::TcpServer</definition>
        <argsstring>(std::string addr, uint16_t port)</argsstring>
        <name>TcpServer</name>
        <param>
          <type>std::string</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpServer.h" line="62" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1a573a0c6d222d66a1be007b5ba8ffe5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rogue::interfaces::stream::TcpServer::~TcpServer</definition>
        <argsstring>()</argsstring>
        <name>~TcpServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpServer.h" line="65" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stream TCP Bridge Server. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is a wrapper around <ref refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore" kindref="compound">TcpCore</ref> which operates in server mode. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Master &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>rogue::interfaces::stream::Pool</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Pool"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rogue::interfaces::stream::TcpServer</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>rogue::interfaces::stream::Master</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Master"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Pool &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::stream::TcpCore</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rogue::interfaces::stream::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Slave"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Master &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>rogue::EnableSharedFromThisBase</label>
        <link refid="classrogue_1_1EnableSharedFromThisBase"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>rogue::interfaces::stream::Pool</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Pool"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>rogue::interfaces::stream::TcpServer</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="16">
        <label>std::thread</label>
      </node>
      <node id="11">
        <label>std::mutex</label>
      </node>
      <node id="14">
        <label>std::shared_ptr&lt; rogue::Logging &gt;</label>
        <childnode refid="15" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>rogue::interfaces::stream::Master</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Master"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>rogue::Logging</label>
        <link refid="classrogue_1_1Logging"/>
      </node>
      <node id="9">
        <label>rogue::EnableSharedFromThis&lt; rogue::interfaces::stream::Pool &gt;</label>
        <link refid="classrogue_1_1EnableSharedFromThis"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::enable_shared_from_this&lt; rogue::EnableSharedFromThisBase &gt;</label>
      </node>
      <node id="2">
        <label>rogue::interfaces::stream::TcpCore</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>bridgeMtx_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>pushAddr_</edgelabel>
          <edgelabel>pullAddr_</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>bridgeLog_</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>thread_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>std::string</label>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>rogue::interfaces::stream::Slave</label>
        <link refid="classrogue_1_1interfaces_1_1stream_1_1Slave"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpServer.h" line="38" column="67" bodyfile="/afs/slac.stanford.edu/u/gu/cdollar/rogue/include/rogue/interfaces/stream/TcpServer.h" bodystart="38" bodyend="66"/>
    <listofallmembers>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ab2d12bc359841fab8247229b3231fc89" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>acceptFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a9fa25c92683134631260373d985fe6ff" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>acceptReq</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a4454d19c72c99a76b8b446fb6afa72e2" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>addSlave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a1929439ba9e528d232da795fc773f6f5" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>allocBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a3c4468013134ae6f15f6b6e1e8b7e1d0" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>bridgeLog_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1afe3003e49a8edd54a9d4a5e70ba3a483" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>bridgeMtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a13b021a080fbfed8c5172c48eabd1969" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>close</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1a64da078c22f070650263c049d7b284f7" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a4c31657d16580725f4ec0000909e9d14" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::TcpCore::"><scope>rogue::interfaces::stream::TcpServer</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1af0ad7b7652bfeb6c1bbef7062245c1ec" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Master::"><scope>rogue::interfaces::stream::TcpServer</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a6cf859e90fb443f756bd49f86759cc08" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::"><scope>rogue::interfaces::stream::TcpServer</scope><name>create</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a6244eb8d4f0d4e69a8539f3d889ed004" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>createBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a01e306fd690bbfcfaec95fd90326564f" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>decCounter</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a80fb7808644726ddca72e8e196477229" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>ensureSingleBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a913f40b8d390d1b2f26fa0aecfea34eb" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>equalsPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a694f6e2bafd0e1bde90027c158685f72" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>getAllocBytes</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a843fe5351d94a90fe8ef1aa792799a21" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>getAllocCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a83a0b347fcb2524362e0c65f8f9d916c" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>getByteCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a2254a049f7825fbc82a2093c18820a3a" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>getFixedSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a504c34d1b91a6358b3eaf7ee6be4417f" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>getFrameCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a73c526e6d724d2d69393cbe77db353bf" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>getPoolSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a9b665aa11a8dbc6de5fc6e3cfe5fab8a" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>lshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1af6f5b686d275b5545ac7feefceab8dd3" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1addf9a4a5d1f7d1d8026ca3ef60dd46e5" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a76dbb1a62ce29ae6d130e11714a37f2f" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>operator==</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a3c410af1f0beab25864711c1be54b336" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>operator&gt;&gt;</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1ac099f47e3db8287ec15628c726aad19c" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>Pool</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a289f9a1d6a24874b6a8a6203d4bdb929" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>pullAddr_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ab083f5abf65daaa26b6fc511e68bc5d1" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>pushAddr_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a7565399ec765e1093a349de8745a5034" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>reqFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a9aa628b56ba13631eca0e7cef44c9d80" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>retBuffer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a98f9088c1a19f7875001c8f782df0265" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>rshiftPy</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a7e32699ee1897f215918bc2338d7eee5" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>runThread</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1ac4270a45820c4c03dd7f2b472df4efd8" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>sendFrame</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a0db1eae3e974be56cfe5cd35653d752d" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>setDebug</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a1180466e6f42279a8c9adb9c689711cd" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>setFixedSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1a4fc6d967cadc1799712e7fe7d56878f5" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>setPoolSize</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1a735eee827a16d929fe502e3e9e325bbf" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>setup_python</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::"><scope>rogue::interfaces::stream::TcpServer</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::rogue::"><scope>rogue::interfaces::stream::TcpServer</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1EnableSharedFromThis_1a2d79e35bc7be4d939e9a82ae58da5400" prot="public" virt="non-virtual" ambiguityscope="rogue::interfaces::stream::Slave::EnableSharedFromThis&lt; rogue::interfaces::stream::Slave &gt;::"><scope>rogue::interfaces::stream::TcpServer</scope><name>shared_from_this</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a3ccdf29d62da59bcc00ab7d4f5ca95aa" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1a69faa639115fd3108de75da01b802720" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>slaveCount</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ac072dda120b0e860fbb456591b6bf8ce" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>stop</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a78f4c472b29c40554cb696e8520f0aa2" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>TcpCore</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1ad048185817341ad9951b945104a4f7ce" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>TcpServer</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1a561760a5fadc6285ca9ec4d59d66a22b" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>thread_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aaaf2c0ba3ce0f99eb3e601ac1dfce3b6" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>threadEn_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1aa990bd53656337bcd942e32412da5d80" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>zmqCtx_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ad57f897d469e88b3c2c20ee4f834d2cf" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>zmqPull_</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1af7e77441ab738fda309c3e05ec952511" prot="protected" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>zmqPush_</name></member>
      <member refid="classrogue_1_1EnableSharedFromThisBase_1a30602a01922086d80c07a8099278b41a" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>~EnableSharedFromThisBase</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Master_1af391073d7d1e1125e9563991de0b0991" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>~Master</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Pool_1aa3335da5e11c507b423f0dc73ccbded1" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>~Pool</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1Slave_1a0bc74622985b7f32ea53175995643001" prot="public" virt="virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>~Slave</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpCore_1ac01385174662946a7ee5af18614e1fd8" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>~TcpCore</name></member>
      <member refid="classrogue_1_1interfaces_1_1stream_1_1TcpServer_1a573a0c6d222d66a1be007b5ba8ffe5f7" prot="public" virt="non-virtual"><scope>rogue::interfaces::stream::TcpServer</scope><name>~TcpServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
