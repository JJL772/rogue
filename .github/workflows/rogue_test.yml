name: Rogue Integration
on: [push]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:

      # This step checks out a copy of your repository.
      - uses: actions/checkout@v2

      - name: Setup Environment
        run: |
         MAKEFLAGS="-j 2"
         EPICS_BASE=${GITHUB_WORKSPACE}/packages/epics/base-7.0.3
         EPICS_PCAS_DIR=${GITHUB_WORKSPACE}/packages/pcas/pcas-4.13.2
         MINICONDA_DIR=${GITHUB_WORKSPACE}/packages/miniconda
         LD_LIBRARY_PATH=/usr/lib:${EPICS_BASE}/lib/linux-x86_64:${EPICS_PCAS_DIR}/lib/linux-x86_64
         echo "MAKEFLAGS=$MAKEFLAGS" >> $GITHUB_ENV
         echo "EPICS_BASE=$EPICS_BASE" >> $GITHUB_ENV
         echo "EPICS_PCAS_DIR=$EPICS_PCAS_DIR" >> $GITHUB_ENV
         echo "MINICONDA_DIR=$MINICONDA_DIR" >> $GITHUB_ENV
         echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install setuptools
          pip3 install -r pip_requirements.txt

      - name: Install EPICS Base
        run: |
          mkdir -p ${EPICS_BASE}
          cd ${EPICS_BASE}
          pwd
          wget -O base-7.0.3.tar.gz  https://github.com/epics-base/epics-base/archive/R7.0.3.tar.gz
          tar xzf base-7.0.3.tar.gz --strip 1
          make clean && make && make install

      - name: Install EPICS PCAS
        run: |
          mkdir -p ${EPICS_PCAS_DIR}
          cd ${EPICS_PCAS_DIR}
          wget -O pcas-4.13.2.tar.gz https://github.com/epics-modules/pcas/archive/v4.13.2.tar.gz
          tar xzf pcas-4.13.2.tar.gz --strip 1
          echo "EPICS_BASE=$EPICS_BASE" >> configure/RELEASE.local
          make clean && make && make install

      # Rogue
      - name: Build Rogue
        run: |
          mkdir build; cd build
          cmake .. -DROGUE_INSTALL=local
          make -j4 install
          source ../setup_rogue.sh

#LD_LIBRARY_PATH=/usr/lib:${EPICS_DIR}/lib/linux-x86_64:${EPICS_PCAS_DIR}/lib/linux-x86_64
